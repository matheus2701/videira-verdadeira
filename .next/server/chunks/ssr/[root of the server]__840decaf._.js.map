{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["\nimport { z } from \"zod\";\n\nexport type Role = 'missionario' | 'lider_de_celula';\n\n// Representa um usuário autenticado do sistema, seu papel e potencial vínculo com um perfil de Vida.\nexport interface User {\n  id: string; // ID do sistema de autenticação\n  name: string; // Nome para exibição no perfil (pode ser da Vida associada)\n  email: string;\n  role: Role;\n  vidaId?: string; // ID da Vida associada, se o usuário for um líder de célula\n  cellGroupId?: string; // ID da célula que o líder (User) lidera\n  cellGroupName?: string; // Nome da célula para exibição rápida\n  isActive?: boolean; // Adicionado para gerenciar status de acesso\n}\n\nexport type VidaStatus = 'membro' | 'lider_em_treinamento' | 'lider_ativo';\n\n// Opções para o select de status de Vida e para exibição amigável.\nexport const vidaStatusOptions: { value: VidaStatus; label: string }[] = [\n  { value: 'membro', label: 'Membro' },\n  { value: 'lider_em_treinamento', label: 'Líder em Treinamento' },\n  { value: 'lider_ativo', label: 'Líder Ativo' },\n];\n\n// Representa um indivíduo na igreja, seus detalhes pessoais e afiliação à célula.\nexport interface Vida {\n  id: string; // ID único da Vida\n  nomeCompleto: string;\n  dataNascimento: Date;\n  telefone?: string;\n  idCelula: string; // ID da célula à qual a Vida está vinculada\n  nomeCelula?: string; // Nome da célula para exibição (pode ser buscado)\n  geracaoCelula?: string; // Geração da célula (pode ser buscado ou informado)\n  status: VidaStatus;\n  createdAt: Date;\n  // historicoLiderancaIds?: string[]; // Futuro: para rastrear se já foi líder\n}\n\nexport type CellMeetingStatus = 'agendada' | 'aconteceu' | 'nao_aconteceu_com_aviso' | 'nao_aconteceu_sem_aviso' | 'cancelada_com_aviso';\n\n// Opções para o select de status de reunião de célula e para exibição amigável.\nexport const cellMeetingStatusOptions: { value: CellMeetingStatus; label: string }[] = [\n  { value: 'agendada', label: 'Agendada' },\n  { value: 'aconteceu', label: 'Aconteceu' },\n  { value: 'nao_aconteceu_com_aviso', label: 'Não Aconteceu (Com Aviso)' },\n  { value: 'nao_aconteceu_sem_aviso', label: 'Não Aconteceu (Sem Aviso)' },\n  { value: 'cancelada_com_aviso', label: 'Cancelada (Com Aviso)' },\n];\n\n// Representa um grupo de célula com seus detalhes de reunião e informações do líder.\nexport interface CellGroup {\n  id: string;\n  name: string;\n  address: string;\n  meetingDay: string;\n  meetingTime: string;\n  geracao?: string;\n  liderVidaId?: string; // ID da Vida que é líder desta célula\n  liderNome?: string; // Nome da Vida líder para exibição\n  meetingStatus?: CellMeetingStatus;\n  meetingStatusReason?: string;\n  lastStatusUpdate?: Date;\n  // totalMembros?: number; // Futuro: pode ser calculado\n}\n\n// Configuração para itens de navegação.\nexport interface NavItemConfig {\n  label: string;\n  href: string;\n  iconKey: string;\n  disabled?: boolean;\n  roles?: Role[];\n  exact?: boolean;\n}\n\nexport const encounterTeamRoles = ['Líder da Equipe', 'Apoio Geral', 'Apoio Santuário', 'Cozinha', 'Intercessor'] as const;\nexport type EncounterTeamRole = typeof encounterTeamRoles[number];\n\n// Representa uma equipe para um evento de Encontro da Paz, incluindo detalhes do evento e organizador.\nexport interface EncounterTeam {\n  id: string;\n  name: string;\n  eventDate?: Date;\n  description?: string;\n  createdAt: Date;\n  organizerUserId?: string;\n  organizerUserName?: string;\n}\n\n// Representa um membro de uma equipe de Encontro da Paz.\nexport interface EncounterTeamMember {\n  id: string;\n  encounterTeamId: string; // Links to EncounterTeam\n  name: string;\n  contact?: string;\n  teamRole: EncounterTeamRole;\n  notes?: string;\n  addedAt: Date;\n}\n\n// Schema Zod para validação do formulário de registro de ofertas.\nexport const offeringSchema = z.object({\n  amount: z.coerce.number().positive({ message: \"Valor deve ser positivo.\" }),\n  date: z.date({ required_error: \"Data da oferta é obrigatória.\" }),\n  cellGroupName: z.string().optional(),\n  notes: z.string().optional(),\n});\n\n// Tipo inferido do schema Zod para os valores do formulário de oferta.\nexport type OfferingFormValues = z.infer<typeof offeringSchema>;\n\n// Representa uma oferta registrada e armazenada no sistema.\nexport interface StoredOffering extends OfferingFormValues {\n  id: string;\n}\n\n// Tipos para Casas de Paz e Lições\nexport interface Lesson {\n  id: string; // ex: \"l1\", \"l2\"\n  title: string;\n  completed: boolean;\n}\n\nexport const peaceHouseLessonTitles: string[] = [\n  \"Quando Jesus entra em minha casa a verdadeira paz é estabelecida\",\n  \"Quando Jesus entra em minha casa decisões corretas são tomadas\",\n  \"Quando Jesus entra em minha casa o perdão é liberado\",\n  \"Quando Jesus entra em minha casa ressurreições acontecem\",\n  \"Quando Jesus entra em minha casa pessoas são curadas\",\n  \"Quando Jesus entra em minha casa limitações são vencidas\",\n  \"Quando Jesus entra em minha casa pessoas são salvas\",\n  \"Meu coração a principal casa a ser conquistada\",\n];\n\nexport function getDefaultLessons(): Lesson[] {\n  return peaceHouseLessonTitles.map((title, index) => ({\n    id: `l${index + 1}`,\n    title: title,\n    completed: false,\n  }));\n}\n\nexport const peaceHouseFormSchema = z.object({\n  responsibleCellGroup: z.string().min(3, { message: \"Nome do grupo deve ter pelo menos 3 caracteres.\" }),\n  scheduledDate: z.date({ required_error: \"Data de agendamento é obrigatória.\" }),\n  location: z.string().min(5, { message: \"Local deve ter pelo menos 5 caracteres.\" }),\n  hostName: z.string().min(3, { message: \"Nome do anfitrião deve ter pelo menos 3 caracteres.\" }),\n  hostContact: z.string().min(10, { message: \"Contato do anfitrião inválido.\" }).regex(/^\\s*(\\(?\\d{2}\\)?\\s?)?(\\d{4,5}-?\\d{4})\\s*$/, { message: \"Formato de telefone inválido.\"}),\n  designatedTeams: z.string().optional(),\n  expectedParticipants: z.coerce.number().int().nonnegative({ message: \"Deve ser um número não negativo.\" }).optional(),\n});\nexport type PeaceHouseFormValues = z.infer<typeof peaceHouseFormSchema>;\n\nexport interface PeaceHouse extends PeaceHouseFormValues {\n  id: string;\n  createdAt: Date;\n  lessonsProgress: Lesson[];\n  isCompleted?: boolean; // Para marcar se todas as lições da casa de paz foram concluídas\n  responsibleCellGroupId?: string; // Opcional: ID da célula para ligação mais forte\n}\n"],"names":[],"mappings":";;;;;;;;;AACA;;AAmBO,MAAM,oBAA4D;IACvE;QAAE,OAAO;QAAU,OAAO;IAAS;IACnC;QAAE,OAAO;QAAwB,OAAO;IAAuB;IAC/D;QAAE,OAAO;QAAe,OAAO;IAAc;CAC9C;AAmBM,MAAM,2BAA0E;IACrF;QAAE,OAAO;QAAY,OAAO;IAAW;IACvC;QAAE,OAAO;QAAa,OAAO;IAAY;IACzC;QAAE,OAAO;QAA2B,OAAO;IAA4B;IACvE;QAAE,OAAO;QAA2B,OAAO;IAA4B;IACvE;QAAE,OAAO;QAAuB,OAAO;IAAwB;CAChE;AA4BM,MAAM,qBAAqB;IAAC;IAAmB;IAAe;IAAmB;IAAW;CAAc;AA0B1G,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QAAE,SAAS;IAA2B;IACzE,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAAgC;IAC/D,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B;AAiBO,MAAM,yBAAmC;IAC9C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,SAAS;IACd,OAAO,uBAAuB,GAAG,CAAC,CAAC,OAAO,QAAU,CAAC;YACnD,IAAI,CAAC,CAAC,EAAE,QAAQ,GAAG;YACnB,OAAO;YACP,WAAW;QACb,CAAC;AACH;AAEO,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,sBAAsB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkD;IACrG,eAAe,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAAqC;IAC7E,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA0C;IACjF,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAsD;IAC7F,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;QAAE,SAAS;IAAiC,GAAG,KAAK,CAAC,6CAA6C;QAAE,SAAS;IAA+B;IAC5K,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACpC,sBAAsB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,WAAW,CAAC;QAAE,SAAS;IAAmC,GAAG,QAAQ;AACrH","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/AuthContext.tsx"],"sourcesContent":["\n'use client';\n\nimport type { ReactNode } from 'react';\nimport { createContext, useState, useMemo, useCallback, useEffect } from 'react'; // Adicionado useEffect\nimport type { User, Role, Vida, CellGroup, StoredOffering, OfferingFormValues, VidaStatus, PeaceHouse, PeaceHouseFormValues, Lesson } from '@/types';\nimport { getDefaultLessons } from '@/types';\n\ninterface AppPermissions {\n  liderPodeVerRelatorios: boolean;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  setUser: (user: User | null) => void; // Kept for direct manipulation if needed elsewhere, though login/logout are preferred\n  loginWithEmail: (email: string, password?: string) => Promise<boolean>; // Password optional for mock\n  logout: () => void;\n  simulateLoginByRole: (role: Role) => void; // Renamed from loginAs for clarity\n  mockUsers: User[];\n  mockVidas: Vida[];\n  mockCellGroups: CellGroup[];\n  mockOfferings: StoredOffering[];\n  mockPeaceHouses: PeaceHouse[];\n  updateMockVida: (updatedVida: Vida) => void;\n  addMockVida: (newVida: Vida) => void;\n  updateMockCellGroup: (updatedCG: CellGroup, oldLiderVidaId?: string) => void;\n  addMockCellGroup: (newCG: CellGroup) => void;\n  addMockUser: (newUser: User) => void;\n  updateMockUser: (updatedUser: User) => void;\n  addMockOffering: (newOffering: OfferingFormValues) => void;\n  addMockPeaceHouse: (newPeaceHouseData: PeaceHouseFormValues) => void;\n  updateMockPeaceHouse: (updatedPeaceHouse: PeaceHouse) => void;\n  toggleUserActiveStatus: (userId: string) => void;\n  appPermissions: AppPermissions;\n  toggleLiderPodeVerRelatorios: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst initialMockVidas: Vida[] = [\n  { id: 'vida-lider-joao', nomeCompleto: 'Líder João', dataNascimento: new Date(1988, 2, 10), telefone: '(11) 91234-5678', idCelula: 'celula-discipulos-001', nomeCelula: 'Discípulos de Cristo', geracaoCelula: 'G1', status: 'lider_ativo', createdAt: new Date() },\n  { id: 'vida-ana', nomeCompleto: 'Ana Silva (Membro)', dataNascimento: new Date(1990, 5, 15), idCelula: 'celula-discipulos-001', nomeCelula: 'Discípulos de Cristo', geracaoCelula: 'G1', status: 'membro', createdAt: new Date() },\n  { id: 'vida-bruno', nomeCompleto: 'Bruno Costa (Outra Célula)', dataNascimento: new Date(1985, 8, 22), idCelula: 'celula-leoes-002', nomeCelula: 'Leões de Judá', geracaoCelula: 'G2', status: 'membro', createdAt: new Date() },\n  { id: 'vida-carla', nomeCompleto: 'Carla Santos (Membro)', dataNascimento: new Date(1995, 10, 5), idCelula: 'celula-leoes-002', nomeCelula: 'Leões de Judá', geracaoCelula: 'G2', status: 'membro', createdAt: new Date() },\n  { id: 'vida-sem-celula', nomeCompleto: 'Mariana Dias (Sem Célula)', dataNascimento: new Date(1992, 7, 12), telefone: '(11) 98888-7777', idCelula: '', nomeCelula: '', geracaoCelula: '', status: 'membro', createdAt: new Date() },\n  { id: 'vida-pedro', nomeCompleto: 'Pedro Álvares (Para Promover)', dataNascimento: new Date(1993, 4, 20), telefone: '(21) 99999-8888', idCelula: 'celula-leoes-002', nomeCelula: 'Leões de Judá', geracaoCelula: 'G2', status: 'membro', createdAt: new Date() },\n  { id: 'vida-lucia', nomeCompleto: 'Lúcia Ferreira (Treinamento)', dataNascimento: new Date(1980, 1, 1), telefone: '(31) 91111-2222', idCelula: 'celula-nova-geracao-003', nomeCelula: 'Nova Geração', geracaoCelula: 'G3', status: 'lider_em_treinamento', createdAt: new Date() },\n];\n\nconst initialMockCellGroups: CellGroup[] = [\n    { id: 'celula-discipulos-001', name: 'Discípulos de Cristo', address: 'Rua da Fé, 123', meetingDay: 'Quarta-feira', meetingTime: '19:30', geracao: 'G1', liderVidaId: 'vida-lider-joao', liderNome: 'Líder João', meetingStatus: 'aconteceu', lastStatusUpdate: new Date(new Date().setDate(new Date().getDate() - 2)) },\n    { id: 'celula-leoes-002', name: 'Leões de Judá', address: 'Av. Esperança, 456', meetingDay: 'Quinta-feira', meetingTime: '20:00', geracao: 'G2', meetingStatus: 'agendada', lastStatusUpdate: new Date(new Date().setDate(new Date().getDate() - 7)) },\n    { id: 'celula-nova-geracao-003', name: 'Nova Geração', address: 'Praça da Alegria, 789', meetingDay: 'Terça-feira', meetingTime: '18:00', geracao: 'G3', liderVidaId: 'vida-lucia', liderNome: 'Lúcia Ferreira', meetingStatus: 'agendada', lastStatusUpdate: new Date(new Date().setDate(new Date().getDate() - 1)) },\n];\n\nconst mockMissionarioUser: User = {\n  id: 'user-missionario-01',\n  name: 'Admin Missionário',\n  email: 'matheus.santos01@gmail.com', // Email atualizado\n  role: 'missionario',\n  isActive: true,\n};\n\nconst mockLiderUserInitial: User = {\n  id: 'user-lider-joao-01',\n  name: 'Líder João',\n  email: 'lider.joao@videira.app',\n  role: 'lider_de_celula',\n  vidaId: 'vida-lider-joao',\n  cellGroupId: 'celula-discipulos-001',\n  cellGroupName: 'Discípulos de Cristo',\n  isActive: true, // Garantir que isActive seja definido\n};\nconst mockLiderLuciaUser: User = {\n    id: 'user-lider-lucia-02',\n    name: 'Lúcia Ferreira',\n    email: 'lucia.ferreira@videira.app',\n    role: 'lider_de_celula',\n    vidaId: 'vida-lucia',\n    cellGroupId: 'celula-nova-geracao-003',\n    cellGroupName: 'Nova Geração',\n    isActive: true,\n}\n\nconst initialMockUsers: User[] = [mockMissionarioUser, mockLiderUserInitial, mockLiderLuciaUser];\n\nconst currentYear = new Date().getFullYear();\nconst initialMockOfferings: StoredOffering[] = [\n  { id: \"off1\", amount: 50, date: new Date(2024, 5, 5), cellGroupName: \"Discípulos de Cristo\", notes: \"Oferta semanal\" },\n  { id: \"off2\", amount: 75, date: new Date(2024, 5, 12), cellGroupName: \"Leões de Judá\", notes: \"Culto de domingo\" },\n  { id: \"off3\", amount: 60, date: new Date(2024, 6, 3), cellGroupName: \"Discípulos de Cristo\" },\n  { id: \"off4\", amount: 100, date: new Date(2024, 6, 10), cellGroupName: \"Leões de Judá\", notes: \"Oferta especial\" },\n  { id: \"off5\", amount: 40, date: new Date(2024, 6, 17), cellGroupName: \"Discípulos de Cristo\", notes: \"Para missões\" },\n  { id: \"off6\", amount: 80, date: new Date(currentYear, new Date().getMonth(), 1), cellGroupName: \"Nova Geração\", notes: \"Oferta deste mês\" },\n  { id: \"off7\", amount: 120, date: new Date(currentYear, new Date().getMonth() -1, 15), cellGroupName: \"Discípulos de Cristo\", notes: \"Oferta do mês passado\" },\n];\n\nconst initialMockPeaceHouses: PeaceHouse[] = [];\n\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUserState] = useState<User | null>(null); // Inicializa como null\n  const [vidasData, setVidasData] = useState<Vida[]>(initialMockVidas);\n  const [cellGroupsData, setCellGroupsData] = useState<CellGroup[]>(initialMockCellGroups);\n  const [usersData, setUsersData] = useState<User[]>(initialMockUsers);\n  const [offeringsData, setOfferingsData] = useState<StoredOffering[]>(initialMockOfferings);\n  const [peaceHousesData, setPeaceHousesData] = useState<PeaceHouse[]>(initialMockPeaceHouses);\n  const [appPermissions, setAppPermissions] = useState<AppPermissions>({ liderPodeVerRelatorios: false });\n\n  // Carregar usuário do localStorage na inicialização\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const storedUser = localStorage.getItem('authUser');\n      if (storedUser) {\n        try {\n          setUserState(JSON.parse(storedUser));\n        } catch (error) {\n          console.error(\"Failed to parse authUser from localStorage\", error);\n          localStorage.removeItem('authUser'); // Clear invalid entry\n        }\n      }\n    }\n  }, []);\n\n  const setUser = useCallback((newUser: User | null) => {\n    setUserState(newUser);\n    if (typeof window !== 'undefined') {\n      if (newUser) {\n        localStorage.setItem('authUser', JSON.stringify(newUser));\n      } else {\n        localStorage.removeItem('authUser');\n      }\n    }\n  }, []);\n\n\n  const loginWithEmail = useCallback(async (email: string, password?: string): Promise<boolean> => {\n    const foundUser = usersData.find(u => u.email.toLowerCase() === email.toLowerCase());\n\n    if (foundUser) {\n      // Simulação de verificação de senha para o missionário específico\n      if (foundUser.email === 'matheus.santos01@gmail.com' && password !== 'videira1701') {\n        console.warn(\"Senha incorreta para o missionário.\");\n        return false;\n      }\n      // Para outros usuários mockados, qualquer senha é aceita se o email existir (ou nenhuma senha é verificada)\n      if (!foundUser.isActive) {\n        console.warn(`Usuário ${foundUser.name} está inativo.`);\n        return false; // Não permite login de usuário inativo\n      }\n      setUser(foundUser);\n      return true;\n    }\n    console.warn(\"Usuário não encontrado:\", email);\n    return false;\n  }, [usersData, setUser]);\n\n  const simulateLoginByRole = useCallback((role: Role) => {\n    let userToLogin: User | undefined;\n    if (role === 'missionario') {\n      userToLogin = usersData.find(u => u.email === 'matheus.santos01@gmail.com');\n    } else {\n      // Tenta encontrar o Líder João ou o primeiro líder de célula ativo\n      userToLogin = usersData.find(u => u.role === 'lider_de_celula' && u.vidaId === 'vida-lider-joao' && u.isActive);\n      if (!userToLogin) {\n        userToLogin = usersData.find(u => u.role === 'lider_de_celula' && u.isActive);\n      }\n    }\n    \n    if (userToLogin && userToLogin.isActive) {\n      setUser(userToLogin);\n    } else if (userToLogin && !userToLogin.isActive) {\n       console.warn(`Usuário ${userToLogin.name} (${role}) está inativo. Login não realizado.`);\n       setUser(null); // Garante que, se um usuário inativo for selecionado, o estado do usuário seja nulo\n    } else {\n      console.warn(`Nenhum usuário ativo encontrado para o papel: ${role}`);\n      setUser(null); // Garante que, se nenhum usuário for encontrado, o estado do usuário seja nulo\n    }\n  }, [usersData, setUser]);\n\n  const logout = useCallback(() => {\n    setUser(null);\n    // localStorage é tratado pelo setUser\n  }, [setUser]);\n\n  const updateMockVida = useCallback((updatedVida: Vida) => {\n    setVidasData(prev => prev.map(v => v.id === updatedVida.id ? updatedVida : v));\n\n    if (updatedVida.status === 'lider_ativo' || updatedVida.status === 'lider_em_treinamento') {\n      if (updatedVida.idCelula) {\n        setCellGroupsData(prevCGs => prevCGs.map(cg => {\n          if (cg.id === updatedVida.idCelula) {\n            return { ...cg, liderVidaId: updatedVida.id, liderNome: updatedVida.nomeCompleto };\n          }\n          if (cg.liderVidaId === updatedVida.id && cg.id !== updatedVida.idCelula) {\n            return { ...cg, liderVidaId: undefined, liderNome: undefined };\n          }\n          return cg;\n        }));\n      }\n      setUsersData(prevUsers => prevUsers.map(u => {\n        if (u.vidaId === updatedVida.id) {\n          const updatedAuthUser = {\n            ...u,\n            role: 'lider_de_celula' as Role,\n            cellGroupId: updatedVida.idCelula || undefined,\n            cellGroupName: updatedVida.nomeCelula || undefined,\n            name: updatedVida.nomeCompleto,\n          };\n          if (user && user.id === u.id) {\n            setUser(updatedAuthUser);\n          }\n          return updatedAuthUser;\n        }\n        return u;\n      }));\n    } else if (updatedVida.status === 'membro') {\n        setCellGroupsData(prevCGs => prevCGs.map(cg => {\n          if (cg.liderVidaId === updatedVida.id) {\n            return { ...cg, liderVidaId: undefined, liderNome: undefined };\n          }\n          return cg;\n        }));\n        setUsersData(prevUsers => prevUsers.map(u => {\n          if (u.vidaId === updatedVida.id && u.role === 'lider_de_celula') {\n             const updatedAuthUser = {...u, cellGroupId: undefined, cellGroupName: undefined};\n             if (user && user.id === u.id) {\n                setUser(prevU => prevU ? {...prevU, cellGroupId: undefined, cellGroupName: undefined } : null);\n             }\n             return updatedAuthUser;\n          }\n          return u;\n        }));\n    }\n  }, [user, setUser]);\n\n  const addMockVida = useCallback((newVida: Vida) => {\n    setVidasData(prev => [{...newVida, createdAt: newVida.createdAt || new Date()}, ...prev]);\n  }, []);\n\n  const updateMockCellGroup = useCallback((updatedCG: CellGroup, oldLiderVidaId?: string) => {\n    setCellGroupsData(prevCGs => prevCGs.map(cg => cg.id === updatedCG.id ? updatedCG : cg));\n\n    if (updatedCG.liderVidaId) {\n      setVidasData(prevVidas => prevVidas.map(v => {\n        if (v.id === updatedCG.liderVidaId) {\n          return {\n            ...v,\n            idCelula: updatedCG.id,\n            nomeCelula: updatedCG.name,\n            geracaoCelula: updatedCG.geracao,\n            status: v.status !== 'lider_ativo' && v.status !== 'lider_em_treinamento' ? 'lider_ativo' as VidaStatus : v.status,\n          };\n        }\n        return v;\n      }));\n      setUsersData(prevUsers => {\n        const existingUserIndex = prevUsers.findIndex(u => u.vidaId === updatedCG.liderVidaId);\n        if (existingUserIndex !== -1) {\n          const updatedUsers = [...prevUsers];\n          const updatedAuthUser = {\n                ...updatedUsers[existingUserIndex],\n                role: 'lider_de_celula' as Role,\n                cellGroupId: updatedCG.id,\n                cellGroupName: updatedCG.name,\n                name: updatedCG.liderNome || updatedUsers[existingUserIndex].name,\n                isActive: updatedUsers[existingUserIndex].isActive === undefined ? true : updatedUsers[existingUserIndex].isActive,\n              };\n          updatedUsers[existingUserIndex] = updatedAuthUser;\n          if (user && user.id === updatedAuthUser.id) {\n            setUser(updatedAuthUser);\n          }\n          return updatedUsers;\n        } else { \n          const newLiderUser: User = {\n            id: `user-${updatedCG.liderVidaId}-${Date.now()}`,\n            name: updatedCG.liderNome || 'Nome do Líder',\n            email: `${(updatedCG.liderNome || 'lider').toLowerCase().replace(/\\s+/g, '.').replace(/[^a-z0-9.]/g, '')}@videira.app`,\n            role: 'lider_de_celula',\n            vidaId: updatedCG.liderVidaId,\n            cellGroupId: updatedCG.id,\n            cellGroupName: updatedCG.name,\n            isActive: true,\n          };\n          if (user && user.vidaId === newLiderUser.vidaId) {\n             setUser(newLiderUser);\n          }\n          return [...prevUsers, newLiderUser];\n        }\n      });\n    }\n\n    if (oldLiderVidaId && oldLiderVidaId !== updatedCG.liderVidaId) {\n        setVidasData(prevVidas => prevVidas.map(v => {\n            if (v.id === oldLiderVidaId && v.idCelula === updatedCG.id) {\n                return { ...v, idCelula: '', nomeCelula: '', geracaoCelula: '' };\n            }\n            return v;\n        }));\n        setUsersData(prevUsers => prevUsers.map(u => {\n            if (u.vidaId === oldLiderVidaId && u.cellGroupId === updatedCG.id) {\n                 const updatedAuthUser = { ...u, cellGroupId: undefined, cellGroupName: undefined };\n                 if (user && user.id === u.id) {\n                    setUser(updatedAuthUser);\n                 }\n                return updatedAuthUser;\n            }\n            return u;\n        }));\n    }\n  }, [user, setUser]);\n\n  const addMockCellGroup = useCallback((newCG: CellGroup) => {\n    const cellWithDefaults = {...newCG, lastStatusUpdate: newCG.lastStatusUpdate || new Date()};\n    setCellGroupsData(prev => [cellWithDefaults, ...prev]);\n    if (newCG.liderVidaId) {\n        updateMockCellGroup(cellWithDefaults); // Passar a célula com defaults\n    }\n  }, [updateMockCellGroup]);\n\n  const addMockUser = useCallback((newUser: User) => {\n    setUsersData(prev => {\n      const existingUserIndex = prev.findIndex(u => u.vidaId && newUser.vidaId && u.vidaId === newUser.vidaId);\n      if (existingUserIndex !== -1) {\n        const updatedUsers = [...prev];\n        updatedUsers[existingUserIndex] = {...updatedUsers[existingUserIndex], ...newUser, isActive: newUser.isActive ?? updatedUsers[existingUserIndex].isActive ?? true};\n        if (user && user.id === updatedUsers[existingUserIndex].id) {\n          setUser(updatedUsers[existingUserIndex]);\n        }\n        return updatedUsers;\n      }\n      return [{...newUser, isActive: newUser.isActive ?? true}, ...prev];\n    });\n  }, [user, setUser]);\n\n  const updateMockUser = useCallback((updatedUser: User) => {\n    setUsersData(prev => prev.map(u => {\n      if (u.id === updatedUser.id) {\n        const mergedUser = {...u, ...updatedUser, isActive: updatedUser.isActive ?? u.isActive ?? true };\n        if (user && user.id === updatedUser.id) {\n          setUser(mergedUser);\n        }\n        return mergedUser;\n      }\n      return u;\n    }));\n  }, [user, setUser]);\n\n  const addMockOffering = useCallback((newOfferingData: OfferingFormValues) => {\n    const newOffering: StoredOffering = {\n      id: `off-${Date.now()}`,\n      ...newOfferingData,\n    };\n    setOfferingsData(prev => [newOffering, ...prev]);\n  }, []);\n\n  const toggleUserActiveStatus = useCallback((userIdToToggle: string) => {\n    setUsersData(prevUsers =>\n      prevUsers.map(u => {\n        if (u.id === userIdToToggle) {\n          const newActiveStatus = u.isActive === undefined ? false : !u.isActive; // Default to false if undefined\n          const updatedUserRecord = { ...u, isActive: newActiveStatus };\n          if (user && user.id === userIdToToggle) { // Se o usuário alterado for o logado\n            setUser(updatedUserRecord); // Atualiza o estado do usuário logado\n          }\n          return updatedUserRecord;\n        }\n        return u;\n      })\n    );\n  }, [user, setUser]);\n\n  const toggleLiderPodeVerRelatorios = useCallback(() => {\n    setAppPermissions(prev => ({ ...prev, liderPodeVerRelatorios: !prev.liderPodeVerRelatorios }));\n  }, []);\n\n  const addMockPeaceHouse = useCallback((newPeaceHouseData: PeaceHouseFormValues) => {\n    const newPeaceHouse: PeaceHouse = {\n      id: `ph-${Date.now()}`,\n      ...newPeaceHouseData,\n      createdAt: new Date(),\n      lessonsProgress: getDefaultLessons(),\n      isCompleted: false,\n    };\n    setPeaceHousesData(prev => [newPeaceHouse, ...prev]);\n  }, []);\n\n  const updateMockPeaceHouse = useCallback((updatedPeaceHouse: PeaceHouse) => {\n    setPeaceHousesData(prev => prev.map(ph => ph.id === updatedPeaceHouse.id ? updatedPeaceHouse : ph));\n  }, []);\n\n  const value = useMemo(() => ({\n    user,\n    setUser,\n    loginWithEmail,\n    logout,\n    simulateLoginByRole,\n    mockUsers: usersData,\n    mockVidas: vidasData,\n    mockCellGroups: cellGroupsData,\n    mockOfferings: offeringsData,\n    mockPeaceHouses: peaceHousesData,\n    updateMockVida,\n    addMockVida,\n    updateMockCellGroup,\n    addMockCellGroup,\n    addMockUser,\n    updateMockUser,\n    addMockOffering,\n    addMockPeaceHouse,\n    updateMockPeaceHouse,\n    toggleUserActiveStatus,\n    appPermissions,\n    toggleLiderPodeVerRelatorios,\n  }), [user, setUser, loginWithEmail, logout, simulateLoginByRole, usersData, vidasData, cellGroupsData, offeringsData, peaceHousesData, updateMockVida, addMockVida, updateMockCellGroup, addMockCellGroup, addMockUser, updateMockUser, addMockOffering, addMockPeaceHouse, updateMockPeaceHouse, toggleUserActiveStatus, appPermissions, toggleLiderPodeVerRelatorios]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1121, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/useAuth.ts"],"sourcesContent":["\n'use client';\n\nimport { useContext } from 'react';\nimport { AuthContext } from '@/contexts/AuthContext';\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;AAGA;AACA;AAHA;;;AAKO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,+HAAA,CAAA,cAAW;IACtC,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons.tsx"],"sourcesContent":["\nimport {\n  Grape,\n  LayoutDashboard,\n  Users, // Usado para \"Vidas\"\n  HandCoins,\n  Home, // Usado para \"PeaceHouses\"\n  ClipboardCheck,\n  BarChartBig,\n  LayoutGrid, // Usado para \"Grupos de Células\"\n  Settings,\n  LogOut,\n  UsersRound, // Usado para Encounter Teams\n  UserCog, // Usado para \"Líderes\"\n  type LucideIcon,\n} from 'lucide-react';\n\nexport const Icons = {\n  Logo: Grape,\n  Dashboard: LayoutDashboard,\n  Vidas: Users, // Renomeado de Members para Vidas\n  CellGroups: LayoutGrid,\n  Lideres: UserCog, // Novo ícone para Líderes\n  Offerings: HandCoins,\n  PeaceHouses: Home, // Alterado de ShieldCheck para Home\n  Lessons: ClipboardCheck,\n  Reports: BarChartBig,\n  Settings: Settings,\n  Logout: LogOut,\n  EncounterTeams: UsersRound, // Adicionado ícone para Equipes de Encontro\n};\n\nexport type IconKey = keyof typeof Icons;\n"],"names":[],"mappings":";;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBO,MAAM,QAAQ;IACnB,MAAM,oMAAA,CAAA,QAAK;IACX,WAAW,4NAAA,CAAA,kBAAe;IAC1B,OAAO,oMAAA,CAAA,QAAK;IACZ,YAAY,kNAAA,CAAA,aAAU;IACtB,SAAS,4MAAA,CAAA,UAAO;IAChB,WAAW,gNAAA,CAAA,YAAS;IACpB,aAAa,mMAAA,CAAA,OAAI;IACjB,SAAS,0NAAA,CAAA,iBAAc;IACvB,SAAS,2NAAA,CAAA,cAAW;IACpB,UAAU,0MAAA,CAAA,WAAQ;IAClB,QAAQ,0MAAA,CAAA,SAAM;IACd,gBAAgB,kNAAA,CAAA,aAAU;AAC5B","debugId":null}},
    {"offset": {"line": 1178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useToast } from '@/hooks/use-toast';\nimport { Icons } from '@/components/icons';\n\nconst loginSchema = z.object({\n  email: z.string().email({ message: 'E-mail inválido.' }),\n  password: z.string().min(1, { message: 'Senha é obrigatória.' }),\n});\n\ntype LoginFormValues = z.infer<typeof loginSchema>;\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const auth = useAuth();\n  const { toast } = useToast();\n\n  const form = useForm<LoginFormValues>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  useEffect(() => {\n    // Redirect to dashboard if user is already logged in\n    if (auth.user) {\n      router.push('/dashboard');\n    }\n  }, [auth.user, router]);\n\n  async function onSubmit(values: LoginFormValues) {\n    const success = await auth.loginWithEmail(values.email, values.password);\n    if (success) {\n      router.push('/dashboard');\n    } else {\n      toast({\n        title: 'Erro de Login',\n        description: 'E-mail ou senha inválidos, ou usuário inativo.',\n        variant: 'destructive',\n      });\n    }\n  }\n\n  // If user becomes available while on this page (e.g. due to fast context update),\n  // useEffect will handle redirect. Render nothing or a loader until then.\n   if (auth.user && !form.formState.isSubmitting) {\n    return null; \n  }\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-background p-4\">\n      <Card className=\"w-full max-w-sm shadow-xl\">\n        <CardHeader className=\"space-y-1 text-center\">\n          <div className=\"flex justify-center mb-4\">\n            <Icons.Logo className=\"h-12 w-12 text-primary\" />\n          </div>\n          <CardTitle className=\"font-headline text-3xl\">Bem-vindo de Volta!</CardTitle>\n          <CardDescription className=\"font-body\">\n            Acesse sua conta para continuar gerenciando a Videira Verdadeira.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <Label htmlFor=\"email\">E-mail</Label>\n                    <FormControl>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"seu@email.com\"\n                        autoComplete=\"email\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <Label htmlFor=\"password\">Senha</Label>\n                    <FormControl>\n                      <Input \n                        id=\"password\" \n                        type=\"password\" \n                        placeholder=\"********\" \n                        autoComplete=\"current-password\"\n                        {...field} \n                       />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" className=\"w-full\" disabled={form.formState.isSubmitting}>\n                {form.formState.isSubmitting ? 'Entrando...' : 'Entrar'}\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}