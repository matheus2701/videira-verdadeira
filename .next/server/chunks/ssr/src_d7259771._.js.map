{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["\nimport { z } from \"zod\";\n\nexport type Role = 'missionario' | 'lider_de_celula';\n\n// Representa um usuário autenticado do sistema, seu papel e potencial vínculo com um perfil de Vida.\nexport interface User {\n  id: string; // ID do sistema de autenticação\n  name: string; // Nome para exibição no perfil (pode ser da Vida associada)\n  email: string;\n  role: Role;\n  vidaId?: string; // ID da Vida associada, se o usuário for um líder de célula\n  cellGroupId?: string; // ID da célula que o líder (User) lidera\n  cellGroupName?: string; // Nome da célula para exibição rápida\n}\n\nexport type VidaStatus = 'membro' | 'lider_em_treinamento' | 'lider_ativo';\n\n// Opções para o select de status de Vida e para exibição amigável.\nexport const vidaStatusOptions: { value: VidaStatus; label: string }[] = [\n  { value: 'membro', label: 'Membro' },\n  { value: 'lider_em_treinamento', label: 'Líder em Treinamento' },\n  { value: 'lider_ativo', label: 'Líder Ativo' },\n];\n\n// Representa um indivíduo na igreja, seus detalhes pessoais e afiliação à célula.\nexport interface Vida {\n  id: string; // ID único da Vida\n  nomeCompleto: string;\n  dataNascimento: Date;\n  telefone?: string;\n  idCelula: string; // ID da célula à qual a Vida está vinculada\n  nomeCelula?: string; // Nome da célula para exibição (pode ser buscado)\n  geracaoCelula?: string; // Geração da célula (pode ser buscado ou informado)\n  status: VidaStatus;\n  createdAt: Date;\n  // historicoLiderancaIds?: string[]; // Futuro: para rastrear se já foi líder\n}\n\nexport type CellMeetingStatus = 'agendada' | 'aconteceu' | 'nao_aconteceu_com_aviso' | 'nao_aconteceu_sem_aviso' | 'cancelada_com_aviso';\n\n// Opções para o select de status de reunião de célula e para exibição amigável.\nexport const cellMeetingStatusOptions: { value: CellMeetingStatus; label: string }[] = [\n  { value: 'agendada', label: 'Agendada' },\n  { value: 'aconteceu', label: 'Aconteceu' },\n  { value: 'nao_aconteceu_com_aviso', label: 'Não Aconteceu (Com Aviso)' },\n  { value: 'nao_aconteceu_sem_aviso', label: 'Não Aconteceu (Sem Aviso)' },\n  { value: 'cancelada_com_aviso', label: 'Cancelada (Com Aviso)' },\n];\n\n// Representa um grupo de célula com seus detalhes de reunião e informações do líder.\nexport interface CellGroup {\n  id: string;\n  name: string;\n  address: string;\n  meetingDay: string;\n  meetingTime: string;\n  geracao?: string;\n  liderVidaId?: string; // ID da Vida que é líder desta célula\n  liderNome?: string; // Nome da Vida líder para exibição\n  meetingStatus?: CellMeetingStatus;\n  meetingStatusReason?: string;\n  lastStatusUpdate?: Date;\n  // totalMembros?: number; // Futuro: pode ser calculado\n}\n\n// Configuração para itens de navegação.\nexport interface NavItemConfig {\n  label: string;\n  href: string;\n  iconKey: string;\n  disabled?: boolean;\n  roles?: Role[];\n  exact?: boolean;\n}\n\nexport const encounterTeamRoles = ['Líder da Equipe', 'Apoio Geral', 'Apoio Santuário', 'Cozinha', 'Intercessor'] as const;\nexport type EncounterTeamRole = typeof encounterTeamRoles[number];\n\n// Representa uma equipe para um evento de Encontro da Paz, incluindo detalhes do evento e organizador.\nexport interface EncounterTeam {\n  id: string;\n  name: string;\n  eventDate?: Date;\n  description?: string;\n  createdAt: Date;\n  organizerUserId?: string; \n  organizerUserName?: string;\n}\n\n// Representa um membro de uma equipe de Encontro da Paz.\nexport interface EncounterTeamMember {\n  id: string;\n  encounterTeamId: string; // Links to EncounterTeam\n  name: string;\n  contact?: string;\n  teamRole: EncounterTeamRole;\n  notes?: string;\n  addedAt: Date;\n}\n\n// Schema Zod para validação do formulário de registro de ofertas.\nexport const offeringSchema = z.object({\n  amount: z.coerce.number().positive({ message: \"Valor deve ser positivo.\" }),\n  date: z.date({ required_error: \"Data da oferta é obrigatória.\" }),\n  cellGroupName: z.string().optional(),\n  notes: z.string().optional(),\n});\n\n// Tipo inferido do schema Zod para os valores do formulário de oferta.\nexport type OfferingFormValues = z.infer<typeof offeringSchema>;\n\n// Representa uma oferta registrada e armazenada no sistema.\nexport interface StoredOffering extends OfferingFormValues {\n  id: string;\n}\n"],"names":[],"mappings":";;;;;;AACA;;AAkBO,MAAM,oBAA4D;IACvE;QAAE,OAAO;QAAU,OAAO;IAAS;IACnC;QAAE,OAAO;QAAwB,OAAO;IAAuB;IAC/D;QAAE,OAAO;QAAe,OAAO;IAAc;CAC9C;AAmBM,MAAM,2BAA0E;IACrF;QAAE,OAAO;QAAY,OAAO;IAAW;IACvC;QAAE,OAAO;QAAa,OAAO;IAAY;IACzC;QAAE,OAAO;QAA2B,OAAO;IAA4B;IACvE;QAAE,OAAO;QAA2B,OAAO;IAA4B;IACvE;QAAE,OAAO;QAAuB,OAAO;IAAwB;CAChE;AA4BM,MAAM,qBAAqB;IAAC;IAAmB;IAAe;IAAmB;IAAW;CAAc;AA0B1G,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QAAE,SAAS;IAA2B;IACzE,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAAgC;IAC/D,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/reports/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useMemo, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow, TableCaption } from \"@/components/ui/table\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { ShieldAlert, BarChartBig, Activity, HandCoins, Download } from \"lucide-react\"; // Adicionado HandCoins e Download\nimport type { CellGroup, CellMeetingStatus, Vida, StoredOffering } from '@/types';\nimport { cellMeetingStatusOptions } from '@/types';\nimport { format, getYear, getMonth, startOfMonth } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { ResponsiveContainer, BarChart, XAxis, YAxis, Tooltip, Legend, Bar } from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, type ChartConfig } from \"@/components/ui/chart\";\nimport { useToast } from '@/hooks/use-toast';\n\n\ninterface FormattedCellGroup extends CellGroup {\n  formattedLastStatusUpdate?: string;\n  statusLabel?: string;\n}\n\nconst vidaGrowthChartConfig = {\n  count: {\n    label: \"Novas Vidas\",\n    color: \"hsl(var(--chart-1))\",\n  },\n} satisfies ChartConfig;\n\nconst offeringChartConfig = {\n  totalAmount: {\n    label: \"Total Arrecadado\",\n    color: \"hsl(var(--chart-2))\", \n  },\n} satisfies ChartConfig;\n\nconst reportMonths = [\n  { value: \"todos\", label: \"Todos os Meses\" },\n  ...Array.from({ length: 12 }, (_, i) => ({\n    value: (i + 1).toString(),\n    label: format(new Date(2000, i, 1), \"MMMM\", { locale: ptBR }),\n  }))\n];\n\n\nexport default function ReportsPage() {\n  const { user, mockCellGroups, mockVidas, mockOfferings } = useAuth();\n  const { toast } = useToast();\n\n  // Estados para Relatório de Status das Células\n  const [filterStatus, setFilterStatus] = useState<CellMeetingStatus | 'todos'>('todos');\n  const [filterLider, setFilterLider] = useState('');\n  const [filterGeracao, setFilterGeracao] = useState('');\n  const [formattedCellGroups, setFormattedCellGroups] = useState<FormattedCellGroup[]>([]);\n  const [totalVidasNoAno, setTotalVidasNoAno] = useState<number | null>(null);\n  const [totalOfertasNoAno, setTotalOfertasNoAno] = useState<string | null>(null);\n\n\n  // Estados para Relatório de Crescimento de Vidas\n  const [selectedGrowthYear, setSelectedGrowthYear] = useState<string>(() => getYear(new Date()).toString());\n  const [availableGrowthYears, setAvailableGrowthYears] = useState<string[]>([]);\n\n  // Estados para Relatório Financeiro de Ofertas\n  const [selectedReportOfferingYear, setSelectedReportOfferingYear] = useState<string>(() => getYear(new Date()).toString());\n  const [selectedReportOfferingMonth, setSelectedReportOfferingMonth] = useState<string>(\"todos\");\n  const [availableReportOfferingYears, setAvailableReportOfferingYears] = useState<string[]>([]);\n  const [totalOfferingsForPeriodDisplay, setTotalOfferingsForPeriodDisplay] = useState<string | null>(null);\n\n\n  // Lógica para Relatório de Status das Células\n  const filteredAndSortedCellGroups = useMemo(() => {\n    let groups = mockCellGroups\n      .map(cg => ({\n        ...cg,\n        statusLabel: cellMeetingStatusOptions.find(opt => opt.value === cg.meetingStatus)?.label || 'N/A',\n      }))\n      .filter(cg => {\n        const statusMatch = filterStatus === 'todos' || cg.meetingStatus === filterStatus;\n        const liderMatch = filterLider === '' || (cg.liderNome || '').toLowerCase().includes(filterLider.toLowerCase());\n        const geracaoMatch = filterGeracao === '' || (cg.geracao || '').toLowerCase().includes(filterGeracao.toLowerCase());\n        return statusMatch && liderMatch && geracaoMatch;\n      });\n    groups.sort((a, b) => a.name.localeCompare(b.name));\n    return groups;\n  }, [mockCellGroups, filterStatus, filterLider, filterGeracao]);\n\n  useEffect(() => {\n    const groupsWithFormattedDates = filteredAndSortedCellGroups.map(cg => ({\n      ...cg,\n      formattedLastStatusUpdate: cg.lastStatusUpdate\n        ? format(new Date(cg.lastStatusUpdate), \"dd/MM/yyyy 'às' HH:mm\", { locale: ptBR })\n        : 'N/A',\n    }));\n    setFormattedCellGroups(groupsWithFormattedDates);\n  }, [filteredAndSortedCellGroups]);\n\n  // Lógica para Relatório de Crescimento de Vidas\n  useEffect(() => {\n    if (mockVidas.length > 0) {\n      const years = new Set(mockVidas.map(vida => getYear(new Date(vida.createdAt)).toString()));\n      const sortedYears = Array.from(years).sort((a, b) => parseInt(b) - parseInt(a));\n      setAvailableGrowthYears(sortedYears);\n      if (!sortedYears.includes(selectedGrowthYear) && sortedYears.length > 0) {\n        setSelectedGrowthYear(sortedYears[0]);\n      } else if (sortedYears.length === 0 && !sortedYears.includes(selectedGrowthYear)) {\n        setSelectedGrowthYear(getYear(new Date()).toString());\n      }\n    } else {\n        setAvailableGrowthYears([getYear(new Date()).toString()]);\n    }\n  }, [mockVidas, selectedGrowthYear]);\n\n  const vidasGrowthChartData = useMemo(() => {\n    const year = parseInt(selectedGrowthYear);\n    const monthlyCounts = Array(12).fill(0).map((_, index) => ({\n      month: format(new Date(year, index), \"MMM\", { locale: ptBR }),\n      count: 0,\n    }));\n\n    let countForYear = 0;\n    mockVidas.forEach(vida => {\n      const vidaDate = new Date(vida.createdAt);\n      if (getYear(vidaDate) === year) {\n        const monthIndex = getMonth(vidaDate);\n        monthlyCounts[monthIndex].count++;\n        countForYear++;\n      }\n    });\n    setTotalVidasNoAno(countForYear);\n    return monthlyCounts;\n  }, [mockVidas, selectedGrowthYear]);\n\n  // Lógica para Relatório Financeiro de Ofertas\n  useEffect(() => {\n    if (mockOfferings.length > 0) {\n      const years = new Set(mockOfferings.map(offering => getYear(new Date(offering.date)).toString()));\n      const sortedYears = Array.from(years).sort((a, b) => parseInt(b) - parseInt(a));\n      setAvailableReportOfferingYears(sortedYears);\n      if (!sortedYears.includes(selectedReportOfferingYear) && sortedYears.length > 0) {\n        setSelectedReportOfferingYear(sortedYears[0]);\n      } else if (sortedYears.length === 0 && !sortedYears.includes(selectedReportOfferingYear)) {\n         setSelectedReportOfferingYear(getYear(new Date()).toString());\n      }\n    } else {\n        setAvailableReportOfferingYears([getYear(new Date()).toString()]);\n    }\n  }, [mockOfferings, selectedReportOfferingYear]);\n  \n  const filteredReportOfferings = useMemo(() => {\n    return mockOfferings.filter(offering => {\n      const offeringDate = new Date(offering.date);\n      const yearMatch = getYear(offeringDate) === parseInt(selectedReportOfferingYear);\n      const monthMatch = selectedReportOfferingMonth === \"todos\" || (getMonth(offeringDate) + 1) === parseInt(selectedReportOfferingMonth);\n      return yearMatch && monthMatch;\n    });\n  }, [mockOfferings, selectedReportOfferingYear, selectedReportOfferingMonth]);\n\n  useEffect(() => {\n    const totalForYear = mockOfferings\n      .filter(o => getYear(new Date(o.date)) === parseInt(selectedReportOfferingYear))\n      .reduce((sum, o) => sum + o.amount, 0);\n    setTotalOfertasNoAno(totalForYear.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }));\n  }, [mockOfferings, selectedReportOfferingYear]);\n\n  const reportOfferingChartData = useMemo(() => {\n    const year = parseInt(selectedReportOfferingYear);\n    const monthlyTotals = Array(12).fill(0).map((_, index) => ({\n      month: format(new Date(year, index), \"MMM\", { locale: ptBR }),\n      totalAmount: 0,\n    }));\n\n    filteredReportOfferings.forEach(offering => {\n        const offeringDate = new Date(offering.date);\n        if (getYear(offeringDate) === year) { \n            const monthIndex = getMonth(offeringDate);\n            monthlyTotals[monthIndex].totalAmount += offering.amount;\n        }\n    });\n\n    if(selectedReportOfferingMonth !== \"todos\") {\n        const singleMonthIndex = parseInt(selectedReportOfferingMonth) -1;\n        if (singleMonthIndex >= 0 && singleMonthIndex < 12) { // Check index validity\n            return [monthlyTotals[singleMonthIndex]];\n        }\n        return []; // Return empty if month index is invalid\n    }\n    return monthlyTotals;\n  }, [filteredReportOfferings, selectedReportOfferingYear, selectedReportOfferingMonth]);\n  \n  useEffect(() => {\n    const total = filteredReportOfferings.reduce((sum, o) => sum + o.amount, 0);\n    setTotalOfferingsForPeriodDisplay(total.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }));\n  }, [filteredReportOfferings]);\n\n  // Função para download de CSV\n  const downloadCSV = (data: any[], filename: string, headersMap?: Record<string, string>) => {\n    if (!data || data.length === 0 || data.every(row => Object.values(row).every(val => val === 0 || val === ''))) {\n      toast({\n        title: \"Nenhum Dado\",\n        description: \"Não há dados para exportar com os filtros atuais.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const csvRows = [];\n    const headers = headersMap ? Object.values(headersMap) : Object.keys(data[0]);\n    csvRows.push(headers.join(','));\n\n    for (const row of data) {\n      const values = (headersMap ? Object.keys(headersMap) : Object.keys(data[0])).map(key => {\n        const rawValue = row[key];\n        // Se o valor for uma data, formatar. Adicionar mais formatações se necessário.\n        let value = rawValue;\n        if (rawValue instanceof Date) {\n          value = format(rawValue, \"dd/MM/yyyy\", { locale: ptBR });\n        } else if (key === 'amount' && typeof rawValue === 'number') { // Formatar valor monetário\n           value = rawValue.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n        }\n        \n        const escaped = ('' + (value ?? '')).replace(/\"/g, '\"\"'); // Lidar com undefined/null\n        return `\"${escaped}\"`;\n      });\n      csvRows.push(values.join(','));\n    }\n\n    const csvString = csvRows.join('\\n');\n    const blob = new Blob([`\\uFEFF${csvString}`], { type: 'text/csv;charset=utf-8;' }); // Adiciona BOM para Excel\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      toast({\n        title: \"Download Iniciado\",\n        description: `${filename} está sendo baixado.`,\n      });\n    }\n  };\n\n  const handleDownloadCellStatusCSV = () => {\n    const dataToExport = formattedCellGroups.map(cg => ({\n      nome: cg.name,\n      lider: cg.liderNome || 'N/A',\n      geracao: cg.geracao || 'N/A',\n      diaHora: `${cg.meetingDay || ''}, ${cg.meetingTime || ''}`,\n      status: cg.statusLabel || 'N/A',\n      motivo: cg.meetingStatusReason || '',\n      ultimaAtualizacao: cg.formattedLastStatusUpdate || 'N/A',\n    }));\n    const headers = {\n      nome: \"Nome da Célula\",\n      lider: \"Líder\",\n      geracao: \"Geração\",\n      diaHora: \"Dia/Hora Reunião\",\n      status: \"Status Reunião\",\n      motivo: \"Motivo\",\n      ultimaAtualizacao: \"Última Atualização\"\n    };\n    downloadCSV(dataToExport, \"relatorio_status_celulas.csv\", headers);\n  };\n\n  const handleDownloadOfferingsCSV = () => {\n    const dataToExport = filteredReportOfferings.map(o => ({\n      date: o.date, // Será formatado dentro de downloadCSV\n      cellGroupName: o.cellGroupName || 'Oferta Geral',\n      amount: o.amount, // Será formatado dentro de downloadCSV\n      notes: o.notes || '',\n    }));\n     const headers = {\n      date: \"Data\",\n      cellGroupName: \"Célula/Origem\",\n      amount: \"Valor (R$)\",\n      notes: \"Notas\"\n    };\n    downloadCSV(dataToExport, `relatorio_ofertas_${reportMonths.find(m=>m.value === selectedReportOfferingMonth)?.label || selectedReportOfferingMonth}_${selectedReportOfferingYear}.csv`, headers);\n  };\n\n  const handleDownloadGrowthCSV = () => {\n    const dataToExport = vidasGrowthChartData.map(data => ({\n        month: data.month,\n        count: data.count,\n    }));\n    const headers = {\n        month: \"Mês\",\n        count: \"Novas Vidas\",\n    };\n    downloadCSV(dataToExport, `relatorio_crescimento_vidas_${selectedGrowthYear}.csv`, headers);\n  };\n\n\n  if (user?.role !== 'missionario') {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full\">\n        <ShieldAlert className=\"w-16 h-16 text-destructive mb-4\" />\n        <h1 className=\"font-headline text-3xl font-semibold mb-2\">Acesso Negado</h1>\n        <p className=\"text-muted-foreground text-center\">\n          {user?.role === 'lider_de_celula'\n            ? \"Líderes de Célula não têm acesso à seção de relatórios gerais.\"\n            : \"Você não tem permissão para acessar esta página.\"\n          }\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"font-headline text-3xl font-semibold\">Relatórios da Igreja</h1>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center gap-2\">\n            <Activity className=\"h-6 w-6 text-primary\" />\n            <CardTitle className=\"font-headline text-xl\">Relatório de Status das Células</CardTitle>\n          </div>\n          <CardDescription className=\"font-body\">\n            Visualize a situação atual de todas as células.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 border rounded-lg\">\n            <div>\n              <Label htmlFor=\"filter-status\" className=\"font-body\">Status da Reunião</Label>\n              <Select value={filterStatus} onValueChange={(value) => setFilterStatus(value as CellMeetingStatus | 'todos')}>\n                <SelectTrigger id=\"filter-status\"><SelectValue placeholder=\"Filtrar por status\" /></SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"todos\">Todos os Status</SelectItem>\n                  {cellMeetingStatusOptions.map(option => (\n                    <SelectItem key={option.value} value={option.value}>{option.label}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label htmlFor=\"filter-lider\" className=\"font-body\">Nome do Líder</Label>\n              <Input id=\"filter-lider\" placeholder=\"Buscar por líder...\" value={filterLider} onChange={(e) => setFilterLider(e.target.value)} />\n            </div>\n            <div>\n              <Label htmlFor=\"filter-geracao\" className=\"font-body\">Geração da Célula</Label>\n              <Input id=\"filter-geracao\" placeholder=\"Buscar por geração...\" value={filterGeracao} onChange={(e) => setFilterGeracao(e.target.value)} />\n            </div>\n          </div>\n          {formattedCellGroups.length === 0 && !mockCellGroups.length ? (\n             <div className=\"mt-4 p-8 border border-dashed rounded-lg flex items-center justify-center text-muted-foreground\">Nenhuma célula cadastrada.</div>\n          ) : formattedCellGroups.length === 0 ? (\n             <div className=\"mt-4 p-8 border border-dashed rounded-lg flex items-center justify-center text-muted-foreground\">Nenhuma célula encontrada.</div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Nome da Célula</TableHead>\n                    <TableHead>Líder</TableHead>\n                    <TableHead>Geração</TableHead>\n                    <TableHead>Dia/Hora Reunião</TableHead>\n                    <TableHead>Status Reunião</TableHead>\n                    <TableHead>Motivo</TableHead>\n                    <TableHead>Última Atualização</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {formattedCellGroups.map((cg) => (\n                    <TableRow key={cg.id}>\n                      <TableCell className=\"font-medium\">{cg.name}</TableCell>\n                      <TableCell>{cg.liderNome || <span className=\"italic text-muted-foreground\">Não definido</span>}</TableCell>\n                      <TableCell>{cg.geracao || <span className=\"italic text-muted-foreground\">N/A</span>}</TableCell>\n                      <TableCell>{cg.meetingDay}, {cg.meetingTime}</TableCell>\n                      <TableCell>\n                        <span className={`px-2 py-0.5 text-xs font-medium rounded-full whitespace-nowrap ${\n                          cg.meetingStatus === 'aconteceu' ? 'bg-green-100 text-green-700 dark:bg-green-800 dark:text-green-200' :\n                          cg.meetingStatus === 'agendada' ? 'bg-blue-100 text-blue-700 dark:bg-blue-800 dark:text-blue-200' :\n                          cg.meetingStatus === 'nao_aconteceu_com_aviso' || cg.meetingStatus === 'nao_aconteceu_sem_aviso' || cg.meetingStatus === 'cancelada_com_aviso' ? 'bg-red-100 text-red-700 dark:bg-red-800 dark:text-red-200' :\n                          'bg-gray-100 text-gray-700 dark:bg-gray-700 dark:text-gray-200'\n                        }`}>{cg.statusLabel}</span>\n                      </TableCell>\n                      <TableCell className=\"text-xs max-w-xs truncate\">{cg.meetingStatusReason || <span className=\"italic text-muted-foreground\">N/A</span>}</TableCell>\n                      <TableCell>{cg.formattedLastStatusUpdate ? cg.formattedLastStatusUpdate : <Skeleton className=\"h-4 w-[100px]\" />}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n                <TableCaption>Exibindo {formattedCellGroups.length} de {mockCellGroups.length} célula(s).</TableCaption>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n        <CardFooter>\n          <Button onClick={handleDownloadCellStatusCSV} variant=\"outline\" size=\"sm\" disabled={formattedCellGroups.length === 0}>\n            <Download className=\"mr-2 h-4 w-4\" />\n            Baixar CSV Status das Células\n          </Button>\n        </CardFooter>\n      </Card>\n\n      <Card>\n        <CardHeader>\n            <div className=\"flex items-center gap-2\">\n                <BarChartBig className=\"h-6 w-6 text-primary\" />\n                <CardTitle className=\"font-headline text-xl\">Relatório de Crescimento de Vidas</CardTitle>\n            </div>\n          <CardDescription className=\"font-body\">Acompanhe o número de novas vidas ao longo do tempo.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"w-full max-w-xs\">\n            <Label htmlFor=\"growth-year-filter\" className=\"font-body\">Selecionar Ano</Label>\n            <Select value={selectedGrowthYear} onValueChange={setSelectedGrowthYear} disabled={availableGrowthYears.length === 0}>\n              <SelectTrigger id=\"growth-year-filter\">\n                <SelectValue placeholder=\"Selecione o ano\" />\n              </SelectTrigger>\n              <SelectContent>\n                {availableGrowthYears.length > 0 ? availableGrowthYears.map(year => (\n                  <SelectItem key={year} value={year}>{year}</SelectItem>\n                )) : <SelectItem value={getYear(new Date()).toString()} disabled>Nenhum dado</SelectItem>}\n              </SelectContent>\n            </Select>\n          </div>\n          {mockVidas.length === 0 ? (\n            <div className=\"mt-4 p-8 border border-dashed rounded-lg flex items-center justify-center text-muted-foreground\">Nenhuma vida cadastrada.</div>\n          ) : vidasGrowthChartData.every(d => d.count === 0) ? (\n            <div className=\"mt-4 p-8 border border-dashed rounded-lg flex items-center justify-center text-muted-foreground\">Nenhuma nova vida registrada para {selectedGrowthYear}.</div>\n          ) : (\n            <div className=\"h-[350px] w-full\">\n              <ChartContainer config={vidaGrowthChartConfig} className=\"h-full w-full\">\n                <BarChart accessibilityLayer data={vidasGrowthChartData} margin={{ top: 5, right: 20, left: 0, bottom: 5 }}>\n                  <XAxis dataKey=\"month\" tickLine={false} axisLine={false} tickMargin={8} />\n                  <YAxis allowDecimals={false} tickLine={false} axisLine={false} tickMargin={8} />\n                  <ChartTooltip content={<ChartTooltipContent />} />\n                  <Legend />\n                  <Bar dataKey=\"count\" fill=\"var(--color-count)\" radius={4} />\n                </BarChart>\n              </ChartContainer>\n            </div>\n          )}\n        </CardContent>\n         <CardFooter className=\"flex flex-col items-start gap-4 sm:flex-row sm:justify-between sm:items-center\">\n            <div>\n                {totalVidasNoAno !== null ? (\n                    <p className=\"text-sm text-muted-foreground font-body\">\n                        Total de Novas Vidas em {selectedGrowthYear}: <span className=\"font-semibold text-primary\">{totalVidasNoAno}</span>.\n                    </p>\n                ) : (\n                    <Skeleton className=\"h-5 w-48\" />\n                )}\n            </div>\n            <Button \n                onClick={handleDownloadGrowthCSV} \n                variant=\"outline\" \n                size=\"sm\" \n                disabled={vidasGrowthChartData.every(d => d.count === 0) && mockVidas.length > 0}\n                className=\"mt-2 sm:mt-0\"\n            >\n                <Download className=\"mr-2 h-4 w-4\" />\n                Baixar CSV Crescimento de Vidas\n            </Button>\n        </CardFooter>\n      </Card>\n\n      <Card>\n        <CardHeader>\n            <div className=\"flex items-center gap-2\">\n                <HandCoins className=\"h-6 w-6 text-primary\" />\n                <CardTitle className=\"font-headline text-xl\">Relatório Financeiro de Ofertas</CardTitle>\n            </div>\n          <CardDescription className=\"font-body\">Visualize o total de ofertas por período.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 border rounded-lg\">\n            <div>\n              <Label htmlFor=\"offering-year-filter\" className=\"font-body\">Ano</Label>\n              <Select value={selectedReportOfferingYear} onValueChange={setSelectedReportOfferingYear} disabled={availableReportOfferingYears.length === 0}>\n                <SelectTrigger id=\"offering-year-filter\">\n                  <SelectValue placeholder=\"Selecione o ano\" />\n                </SelectTrigger>\n                <SelectContent>\n                    {availableReportOfferingYears.length > 0 ? availableReportOfferingYears.map(year => (\n                    <SelectItem key={year} value={year}>{year}</SelectItem>\n                    )) : <SelectItem value={getYear(new Date()).toString()} disabled>Nenhum dado</SelectItem>}\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label htmlFor=\"offering-month-filter\" className=\"font-body\">Mês</Label>\n              <Select value={selectedReportOfferingMonth} onValueChange={setSelectedReportOfferingMonth}>\n                <SelectTrigger id=\"offering-month-filter\">\n                  <SelectValue placeholder=\"Selecione o mês\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {reportMonths.map(month => (\n                    <SelectItem key={month.value} value={month.value}>{month.label}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          \n          <div className=\"p-4 border rounded-lg\">\n            <h3 className=\"font-headline text-lg\">Total Arrecadado no Período Filtrado</h3>\n            {totalOfferingsForPeriodDisplay === null ? (\n                <Skeleton className=\"h-8 w-32 mt-1\" />\n            ) : (\n                <p className=\"text-2xl font-bold font-headline text-primary mt-1\">{totalOfferingsForPeriodDisplay}</p>\n            )}\n            <p className=\"text-xs text-muted-foreground\">\n                {selectedReportOfferingMonth === \"todos\" ? `Ano de ${selectedReportOfferingYear}` : `${reportMonths.find(m=>m.value === selectedReportOfferingMonth)?.label} de ${selectedReportOfferingYear}`}\n            </p>\n          </div>\n\n          {mockOfferings.length === 0 ? (\n            <div className=\"mt-4 p-8 border border-dashed rounded-lg flex items-center justify-center text-muted-foreground\">Nenhuma oferta registrada.</div>\n          ) : reportOfferingChartData.every(d => d.totalAmount === 0) && filteredReportOfferings.length === 0 ? (\n             <div className=\"mt-4 p-8 border border-dashed rounded-lg flex items-center justify-center text-muted-foreground\">\n                Nenhuma oferta registrada para {selectedReportOfferingMonth === \"todos\" ? `o ano de ${selectedReportOfferingYear}` : `${reportMonths.find(m=>m.value === selectedReportOfferingMonth)?.label} de ${selectedReportOfferingYear}`}.\n            </div>\n          ) : (\n            <div className=\"h-[350px] w-full\">\n              <ChartContainer config={offeringChartConfig} className=\"h-full w-full\">\n                <BarChart accessibilityLayer data={reportOfferingChartData} margin={{ top: 5, right: 30, left: 0, bottom: 5 }}>\n                  <XAxis dataKey=\"month\" tickLine={false} axisLine={false} tickMargin={8} />\n                  <YAxis \n                    tickLine={false} \n                    axisLine={false} \n                    tickMargin={8} \n                    tickFormatter={(value) => value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL', minimumFractionDigits: 0, maximumFractionDigits: 0})}\n                  />\n                  <ChartTooltip \n                    content={<ChartTooltipContent \n                        formatter={(value, name, props) => {\n                            return (\n                                <div className=\"flex flex-col\">\n                                   <span className=\"text-muted-foreground\">{props.payload.month}</span>\n                                   <span className=\"font-bold\">{Number(value).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}</span>\n                                </div>\n                            )\n                        }}\n                    />}\n                   />\n                  <Legend />\n                  <Bar dataKey=\"totalAmount\" fill=\"var(--color-totalAmount)\" radius={4} name=\"Total Arrecadado\" />\n                </BarChart>\n              </ChartContainer>\n            </div>\n          )}\n        </CardContent>\n         <CardFooter className=\"flex flex-col items-start gap-4 sm:flex-row sm:justify-between sm:items-center\">\n            <div>\n                 {totalOfertasNoAno !== null ? (\n                    <p className=\"text-sm text-muted-foreground font-body\">\n                        Total Arrecadado no Ano de {selectedReportOfferingYear}: <span className=\"font-semibold text-primary\">{totalOfertasNoAno}</span>.\n                    </p>\n                    ) : (\n                    <Skeleton className=\"h-5 w-56\" />\n                )}\n                <p className=\"text-xs text-muted-foreground font-body mt-1\">\n                Este relatório detalha as ofertas recebidas no período selecionado.\n                </p>\n            </div>\n            <Button onClick={handleDownloadOfferingsCSV} variant=\"outline\" size=\"sm\" disabled={filteredReportOfferings.length === 0} className=\"mt-2 sm:mt-0\">\n                <Download className=\"mr-2 h-4 w-4\" />\n                Baixar CSV Detalhado de Ofertas\n            </Button>\n        </CardFooter>\n      </Card>\n\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}