{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,iKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,iKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,8OAAC,iIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,8OAAC,iIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,8OAAC;4BAAI,WAAU;;gCACZ,uBAAS,8OAAC,iIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,8OAAC,iIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,8OAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/ThemeContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { ReactNode } from 'react';\nimport { createContext, useContext, useEffect, useState, useCallback, useMemo } from 'react';\n\ntype Theme = \"light\" | \"dark\" | \"system\";\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n}\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  resolvedTheme: \"light\" | \"dark\";\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"videira-theme\", // Default storageKey used if not provided\n}: ThemeProviderProps) {\n  const [theme, setThemeState] = useState<Theme>(() => {\n    if (typeof window !== 'undefined') {\n      try {\n        const storedTheme = localStorage.getItem(storageKey) as Theme | null;\n        if (storedTheme && [\"light\", \"dark\", \"system\"].includes(storedTheme)) {\n          return storedTheme;\n        }\n      } catch (e) {\n        // Ignore localStorage errors (e.g., in private browsing)\n        console.error(\"Failed to read theme from localStorage\", e);\n      }\n    }\n    return defaultTheme;\n  });\n\n  const [resolvedTheme, setResolvedTheme] = useState<\"light\" | \"dark\">(() => {\n    // This initial state for resolvedTheme is a best-guess for SSR and initial client render.\n    // It will be correctly set by the useEffect hook once the client mounts.\n    if (defaultTheme === \"dark\") return \"dark\";\n    return \"light\"; // Default to light if system or light, as system preference isn't known SSR.\n  });\n\n  useEffect(() => {\n    // This effect runs on the client after mount.\n    const root = window.document.documentElement;\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    \n    const applyTheme = (currentThemeSetting: Theme) => {\n      let themeToApply: \"light\" | \"dark\";\n      if (currentThemeSetting === \"system\") {\n        themeToApply = mediaQuery.matches ? \"dark\" : \"light\";\n      } else {\n        themeToApply = currentThemeSetting;\n      }\n\n      root.classList.remove(\"light\", \"dark\");\n      root.classList.add(themeToApply);\n      setResolvedTheme(themeToApply);\n\n      try {\n        localStorage.setItem(storageKey, currentThemeSetting);\n      } catch (e) {\n        console.error(\"Failed to save theme to localStorage\", e);\n      }\n    };\n\n    applyTheme(theme); // Apply initial theme\n\n    const handleChange = (e: MediaQueryListEvent) => {\n      if (theme === \"system\") { // Only react to system changes if theme is \"system\"\n        applyTheme(\"system\");\n      }\n    };\n\n    mediaQuery.addEventListener(\"change\", handleChange);\n    return () => mediaQuery.removeEventListener(\"change\", handleChange);\n  }, [theme, storageKey]);\n\n\n  const handleSetTheme = useCallback((newTheme: Theme) => {\n    setThemeState(newTheme);\n  }, []);\n\n  const contextValue = useMemo(() => ({\n    theme,\n    setTheme: handleSetTheme,\n    resolvedTheme,\n  }), [theme, handleSetTheme, resolvedTheme]);\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAIA;AAHA;;;AAmBA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAC5B,QAAQ,EACR,eAAe,QAAQ,EACvB,aAAa,eAAe,EACT;IACnB,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS;QAC7C,uCAAmC;;QAUnC;QACA,OAAO;IACT;IAEA,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;QACnE,0FAA0F;QAC1F,yEAAyE;QACzE,IAAI,iBAAiB,QAAQ,OAAO;QACpC,OAAO,SAAS,6EAA6E;IAC/F;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,8CAA8C;QAC9C,MAAM,OAAO,OAAO,QAAQ,CAAC,eAAe;QAC5C,MAAM,aAAa,OAAO,UAAU,CAAC;QAErC,MAAM,aAAa,CAAC;YAClB,IAAI;YACJ,IAAI,wBAAwB,UAAU;gBACpC,eAAe,WAAW,OAAO,GAAG,SAAS;YAC/C,OAAO;gBACL,eAAe;YACjB;YAEA,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS;YAC/B,KAAK,SAAS,CAAC,GAAG,CAAC;YACnB,iBAAiB;YAEjB,IAAI;gBACF,aAAa,OAAO,CAAC,YAAY;YACnC,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC,wCAAwC;YACxD;QACF;QAEA,WAAW,QAAQ,sBAAsB;QAEzC,MAAM,eAAe,CAAC;YACpB,IAAI,UAAU,UAAU;gBACtB,WAAW;YACb;QACF;QAEA,WAAW,gBAAgB,CAAC,UAAU;QACtC,OAAO,IAAM,WAAW,mBAAmB,CAAC,UAAU;IACxD,GAAG;QAAC;QAAO;KAAW;IAGtB,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAClC,cAAc;IAChB,GAAG,EAAE;IAEL,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAC;YAClC;YACA,UAAU;YACV;QACF,CAAC,GAAG;QAAC;QAAO;QAAgB;KAAc;IAE1C,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;kBAC3B;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["\nimport { z } from \"zod\";\n\nexport type Role = 'missionario' | 'lider_de_celula';\n\n// Representa um usuário autenticado do sistema, seu papel e potencial vínculo com um perfil de Vida.\nexport interface User {\n  id: string; // ID do sistema de autenticação (Supabase auth.users.id)\n  name?: string; // Nome para exibição no perfil (virá da tabela 'profiles' do Supabase)\n  email: string; // Supabase auth.users.email\n  role?: Role; // Virá da tabela 'profiles' do Supabase\n  vidaId?: string; // ID da Vida associada, se o usuário for um líder de célula (da tabela 'profiles')\n  cellGroupId?: string; // ID da célula que o líder (User) lidera (da tabela 'profiles')\n  cellGroupName?: string; // Nome da célula para exibição rápida (da tabela 'profiles')\n  isActive?: boolean; // Virá da tabela 'profiles' do Supabase\n}\n\nexport type VidaStatus = 'membro' | 'lider_em_treinamento' | 'lider_ativo';\n\n// Opções para o select de status de Vida e para exibição amigável.\nexport const vidaStatusOptions: { value: VidaStatus; label: string }[] = [\n  { value: 'membro', label: 'Membro' },\n  { value: 'lider_em_treinamento', label: 'Líder em Treinamento' },\n  { value: 'lider_ativo', label: 'Líder Ativo' },\n];\n\n// Representa um indivíduo na igreja, seus detalhes pessoais e afiliação à célula.\nexport interface Vida {\n  id: string; // ID único da Vida\n  nomeCompleto: string;\n  dataNascimento: Date;\n  telefone?: string;\n  idCelula: string; // ID da célula à qual a Vida está vinculada\n  nomeCelula?: string; // Nome da célula para exibição (pode ser buscado)\n  geracaoCelula?: string; // Geração da célula (pode ser buscado ou informado)\n  status: VidaStatus;\n  createdAt: Date;\n  // historicoLiderancaIds?: string[]; // Futuro: para rastrear se já foi líder\n}\n\nexport type CellMeetingStatus = 'agendada' | 'aconteceu' | 'nao_aconteceu_com_aviso' | 'nao_aconteceu_sem_aviso' | 'cancelada_com_aviso';\n\n// Opções para o select de status de reunião de célula e para exibição amigável.\nexport const cellMeetingStatusOptions: { value: CellMeetingStatus; label: string }[] = [\n  { value: 'agendada', label: 'Agendada' },\n  { value: 'aconteceu', label: 'Aconteceu' },\n  { value: 'nao_aconteceu_com_aviso', label: 'Não Aconteceu (Com Aviso)' },\n  { value: 'nao_aconteceu_sem_aviso', label: 'Não Aconteceu (Sem Aviso)' },\n  { value: 'cancelada_com_aviso', label: 'Cancelada (Com Aviso)' },\n];\n\n// Representa um grupo de célula com seus detalhes de reunião e informações do líder.\nexport interface CellGroup {\n  id: string;\n  name: string;\n  address: string;\n  meetingDay: string;\n  meetingTime: string;\n  geracao?: string;\n  liderVidaId?: string; // ID da Vida que é líder desta célula\n  liderNome?: string; // Nome da Vida líder para exibição\n  meetingStatus?: CellMeetingStatus;\n  meetingStatusReason?: string;\n  lastStatusUpdate?: Date;\n  // totalMembros?: number; // Futuro: pode ser calculado\n}\n\n// Configuração para itens de navegação.\nexport interface NavItemConfig {\n  label: string;\n  href: string;\n  iconKey: string;\n  disabled?: boolean;\n  roles?: Role[];\n  exact?: boolean;\n}\n\nexport const encounterTeamRoles = ['Líder da Equipe', 'Apoio Geral', 'Apoio Santuário', 'Cozinha', 'Intercessor'] as const;\nexport type EncounterTeamRole = typeof encounterTeamRoles[number];\n\n// Representa uma equipe para um evento de Encontro da Paz, incluindo detalhes do evento e organizador.\nexport interface EncounterTeam {\n  id: string;\n  name: string;\n  eventDate?: Date;\n  description?: string;\n  createdAt: Date;\n  organizerUserId?: string;\n  organizerUserName?: string;\n}\n\n// Representa um membro de uma equipe de Encontro da Paz.\nexport interface EncounterTeamMember {\n  id: string;\n  encounterTeamId: string; // Links to EncounterTeam\n  name: string;\n  contact?: string;\n  teamRole: EncounterTeamRole;\n  notes?: string;\n  addedAt: Date;\n}\n\n// Schema Zod para validação do formulário de registro de ofertas.\nexport const offeringSchema = z.object({\n  amount: z.coerce.number().positive({ message: \"Valor deve ser positivo.\" }),\n  date: z.date({ required_error: \"Data da oferta é obrigatória.\" }),\n  cellGroupName: z.string().optional(),\n  notes: z.string().optional(),\n});\n\n// Tipo inferido do schema Zod para os valores do formulário de oferta.\nexport type OfferingFormValues = z.infer<typeof offeringSchema>;\n\n// Representa uma oferta registrada e armazenada no sistema.\nexport interface StoredOffering extends OfferingFormValues {\n  id: string;\n}\n\n// Tipos para Casas de Paz e Lições\nexport interface Lesson {\n  id: string; // ex: \"l1\", \"l2\"\n  title: string;\n  completed: boolean;\n}\n\nexport const peaceHouseLessonTitles: string[] = [\n  \"Quando Jesus entra em minha casa a verdadeira paz é estabelecida\",\n  \"Quando Jesus entra em minha casa decisões corretas são tomadas\",\n  \"Quando Jesus entra em minha casa o perdão é liberado\",\n  \"Quando Jesus entra em minha casa ressurreições acontecem\",\n  \"Quando Jesus entra em minha casa pessoas são curadas\",\n  \"Quando Jesus entra em minha casa limitações são vencidas\",\n  \"Quando Jesus entra em minha casa pessoas são salvas\",\n  \"Meu coração a principal casa a ser conquistada\",\n];\n\nexport function getDefaultLessons(): Lesson[] {\n  return peaceHouseLessonTitles.map((title, index) => ({\n    id: `l${index + 1}`,\n    title: title,\n    completed: false,\n  }));\n}\n\nexport const peaceHouseFormSchema = z.object({\n  responsibleCellGroup: z.string().min(3, { message: \"Nome do grupo deve ter pelo menos 3 caracteres.\" }),\n  scheduledDate: z.date({ required_error: \"Data de agendamento é obrigatória.\" }),\n  location: z.string().min(5, { message: \"Local deve ter pelo menos 5 caracteres.\" }),\n  hostName: z.string().min(3, { message: \"Nome do anfitrião deve ter pelo menos 3 caracteres.\" }),\n  hostContact: z.string().min(10, { message: \"Contato do anfitrião inválido.\" }).regex(/^\\s*(\\(?\\d{2}\\)?\\s?)?(\\d{4,5}-?\\d{4})\\s*$/, { message: \"Formato de telefone inválido.\"}),\n  designatedTeams: z.string().optional(),\n  expectedParticipants: z.coerce.number().int().nonnegative({ message: \"Deve ser um número não negativo.\" }).optional(),\n});\nexport type PeaceHouseFormValues = z.infer<typeof peaceHouseFormSchema>;\n\nexport interface PeaceHouse extends PeaceHouseFormValues {\n  id: string;\n  createdAt: Date;\n  lessonsProgress: Lesson[];\n  isCompleted?: boolean; // Para marcar se todas as lições da casa de paz foram concluídas\n  responsibleCellGroupId?: string; // Opcional: ID da célula para ligação mais forte\n}\n"],"names":[],"mappings":";;;;;;;;;AACA;;AAmBO,MAAM,oBAA4D;IACvE;QAAE,OAAO;QAAU,OAAO;IAAS;IACnC;QAAE,OAAO;QAAwB,OAAO;IAAuB;IAC/D;QAAE,OAAO;QAAe,OAAO;IAAc;CAC9C;AAmBM,MAAM,2BAA0E;IACrF;QAAE,OAAO;QAAY,OAAO;IAAW;IACvC;QAAE,OAAO;QAAa,OAAO;IAAY;IACzC;QAAE,OAAO;QAA2B,OAAO;IAA4B;IACvE;QAAE,OAAO;QAA2B,OAAO;IAA4B;IACvE;QAAE,OAAO;QAAuB,OAAO;IAAwB;CAChE;AA4BM,MAAM,qBAAqB;IAAC;IAAmB;IAAe;IAAmB;IAAW;CAAc;AA0B1G,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QAAE,SAAS;IAA2B;IACzE,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAAgC;IAC/D,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B;AAiBO,MAAM,yBAAmC;IAC9C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,SAAS;IACd,OAAO,uBAAuB,GAAG,CAAC,CAAC,OAAO,QAAU,CAAC;YACnD,IAAI,CAAC,CAAC,EAAE,QAAQ,GAAG;YACnB,OAAO;YACP,WAAW;QACb,CAAC;AACH;AAEO,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,sBAAsB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkD;IACrG,eAAe,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAAqC;IAC7E,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA0C;IACjF,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAsD;IAC7F,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;QAAE,SAAS;IAAiC,GAAG,KAAK,CAAC,6CAA6C;QAAE,SAAS;IAA+B;IAC5K,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACpC,sBAAsB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,WAAW,CAAC;QAAE,SAAS;IAAmC,GAAG,QAAQ;AACrH","debugId":null}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabaseClient.ts"],"sourcesContent":["\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl) {\n  throw new Error(\"Missing env.NEXT_PUBLIC_SUPABASE_URL\");\n}\n\nif (!supabaseAnonKey) {\n  throw new Error(\"Missing env.NEXT_PUBLIC_SUPABASE_ANON_KEY\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB;AACxD,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B;AAEjE,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,CAAC,iBAAiB;IACpB,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/AuthContext.tsx"],"sourcesContent":["\n'use client';\n\nimport type { ReactNode } from 'react';\nimport { createContext, useState, useMemo, useCallback, useEffect } from 'react';\nimport type { User, Role, Vida, CellGroup, StoredOffering, OfferingFormValues, VidaStatus, PeaceHouse, PeaceHouseFormValues, Lesson } from '@/types';\nimport { getDefaultLessons } from '@/types';\nimport { supabase } from '@/lib/supabaseClient'; // Importar Supabase client\nimport type { AuthChangeEvent, Session as SupabaseSession, User as SupabaseUser } from '@supabase/supabase-js';\n\ninterface AppPermissions {\n  liderPodeVerRelatorios: boolean;\n}\n\ninterface GeracaoVideiraConfig {\n  description: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  setUser: (user: User | null) => void; // Manter para compatibilidade, mas Supabase gerencia a sessão\n  loginWithEmail: (email: string, password?: string) => Promise<boolean>;\n  logout: () => Promise<void>;\n  simulateLoginByRole: (role: Role) => void; // Pode ser removido ou adaptado\n  mockUsers: User[];\n  mockVidas: Vida[];\n  mockCellGroups: CellGroup[];\n  mockOfferings: StoredOffering[];\n  mockPeaceHouses: PeaceHouse[];\n  updateMockVida: (updatedVida: Vida) => void;\n  addMockVida: (newVida: Vida) => void;\n  updateMockCellGroup: (updatedCG: CellGroup, oldLiderVidaId?: string) => void;\n  addMockCellGroup: (newCG: CellGroup) => void;\n  addMockUser: (newUser: User) => void;\n  updateMockUser: (updatedUser: User) => void;\n  addMockOffering: (newOffering: OfferingFormValues) => void;\n  addMockPeaceHouse: (newPeaceHouseData: PeaceHouseFormValues) => void;\n  updateMockPeaceHouse: (updatedPeaceHouse: PeaceHouse) => void;\n  toggleUserActiveStatus: (userId: string) => void;\n  appPermissions: AppPermissions;\n  toggleLiderPodeVerRelatorios: () => void;\n  geracaoVideiraConfig: GeracaoVideiraConfig;\n  setGeracaoVideiraDescription: (description: string) => void;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Dados mock permanecerão por enquanto para outras funcionalidades não migradas\nconst initialMockVidas: Vida[] = [\n  { id: 'vida-lider-joao', nomeCompleto: 'Líder João', dataNascimento: new Date(1988, 2, 10), telefone: '(11) 91234-5678', idCelula: 'celula-discipulos-001', nomeCelula: 'Discípulos de Cristo', geracaoCelula: 'G1', status: 'lider_ativo', createdAt: new Date() },\n  { id: 'vida-ana', nomeCompleto: 'Ana Silva (Membro)', dataNascimento: new Date(1990, 5, 15), idCelula: 'celula-discipulos-001', nomeCelula: 'Discípulos de Cristo', geracaoCelula: 'G1', status: 'membro', createdAt: new Date() },\n  { id: 'vida-bruno', nomeCompleto: 'Bruno Costa (Outra Célula)', dataNascimento: new Date(1985, 8, 22), idCelula: 'celula-leoes-002', nomeCelula: 'Leões de Judá', geracaoCelula: 'G2', status: 'membro', createdAt: new Date() },\n  { id: 'vida-carla', nomeCompleto: 'Carla Santos (Membro)', dataNascimento: new Date(1995, 10, 5), idCelula: 'celula-leoes-002', nomeCelula: 'Leões de Judá', geracaoCelula: 'G2', status: 'membro', createdAt: new Date() },\n  { id: 'vida-sem-celula', nomeCompleto: 'Mariana Dias (Sem Célula)', dataNascimento: new Date(1992, 7, 12), telefone: '(11) 98888-7777', idCelula: '', nomeCelula: '', geracaoCelula: '', status: 'membro', createdAt: new Date() },\n  { id: 'vida-pedro', nomeCompleto: 'Pedro Álvares (Para Promover)', dataNascimento: new Date(1993, 4, 20), telefone: '(21) 99999-8888', idCelula: 'celula-leoes-002', nomeCelula: 'Leões de Judá', geracaoCelula: 'G2', status: 'membro', createdAt: new Date() },\n  { id: 'vida-lucia', nomeCompleto: 'Lúcia Ferreira (Treinamento)', dataNascimento: new Date(1980, 1, 1), telefone: '(31) 91111-2222', idCelula: 'celula-nova-geracao-003', nomeCelula: 'Nova Geração', geracaoCelula: 'G3', status: 'lider_em_treinamento', createdAt: new Date() },\n];\n\nconst initialMockCellGroups: CellGroup[] = [\n    { id: 'celula-discipulos-001', name: 'Discípulos de Cristo', address: 'Rua da Fé, 123', meetingDay: 'Quarta-feira', meetingTime: '19:30', geracao: 'G1', liderVidaId: 'vida-lider-joao', liderNome: 'Líder João', meetingStatus: 'aconteceu', lastStatusUpdate: new Date(new Date().setDate(new Date().getDate() - 2)) },\n    { id: 'celula-leoes-002', name: 'Leões de Judá', address: 'Av. Esperança, 456', meetingDay: 'Quinta-feira', meetingTime: '20:00', geracao: 'G2', meetingStatus: 'agendada', lastStatusUpdate: new Date(new Date().setDate(new Date().getDate() - 7)) },\n    { id: 'celula-nova-geracao-003', name: 'Nova Geração', address: 'Praça da Alegria, 789', meetingDay: 'Terça-feira', meetingTime: '18:00', geracao: 'G3', liderVidaId: 'vida-lucia', liderNome: 'Lúcia Ferreira', meetingStatus: 'agendada', lastStatusUpdate: new Date(new Date().setDate(new Date().getDate() - 1)) },\n];\n\nconst mockMissionarioUser: User = {\n  id: 'user-missionario-01', // Este ID será do Supabase após cadastro\n  name: 'Admin Missionário',\n  email: 'matheus.santos01@gmail.com',\n  role: 'missionario',\n  isActive: true,\n};\n\nconst mockLiderUserInitial: User = {\n  id: 'user-lider-joao-01', // Este ID será do Supabase após cadastro\n  name: 'Líder João',\n  email: 'lider.joao@videira.app',\n  role: 'lider_de_celula',\n  vidaId: 'vida-lider-joao',\n  cellGroupId: 'celula-discipulos-001',\n  cellGroupName: 'Discípulos de Cristo',\n  isActive: true,\n};\nconst mockLiderLuciaUser: User = {\n    id: 'user-lider-lucia-02', // Este ID será do Supabase após cadastro\n    name: 'Lúcia Ferreira',\n    email: 'lucia.ferreira@videira.app',\n    role: 'lider_de_celula',\n    vidaId: 'vida-lucia',\n    cellGroupId: 'celula-nova-geracao-003',\n    cellGroupName: 'Nova Geração',\n    isActive: true,\n}\n\nconst initialMockUsers: User[] = [mockMissionarioUser, mockLiderUserInitial, mockLiderLuciaUser];\n\nconst currentYear = new Date().getFullYear();\nconst initialMockOfferings: StoredOffering[] = [\n  { id: \"off1\", amount: 50, date: new Date(2024, 5, 5), cellGroupName: \"Discípulos de Cristo\", notes: \"Oferta semanal\" },\n  { id: \"off2\", amount: 75, date: new Date(2024, 5, 12), cellGroupName: \"Leões de Judá\", notes: \"Culto de domingo\" },\n  { id: \"off3\", amount: 60, date: new Date(2024, 6, 3), cellGroupName: \"Discípulos de Cristo\" },\n  { id: \"off4\", amount: 100, date: new Date(2024, 6, 10), cellGroupName: \"Leões de Judá\", notes: \"Oferta especial\" },\n  { id: \"off5\", amount: 40, date: new Date(2024, 6, 17), cellGroupName: \"Discípulos de Cristo\", notes: \"Para missões\" },\n  { id: \"off6\", amount: 80, date: new Date(currentYear, new Date().getMonth(), 1), cellGroupName: \"Nova Geração\", notes: \"Oferta deste mês\" },\n  { id: \"off7\", amount: 120, date: new Date(currentYear, new Date().getMonth() -1, 15), cellGroupName: \"Discípulos de Cristo\", notes: \"Oferta do mês passado\" },\n];\n\nconst initialMockPeaceHouses: PeaceHouse[] = [];\nconst defaultGeracaoVideiraDescription = `A Geração Videira Verdadeira representa o compromisso com a formação de discípulos\nsegundo os ensinamentos de Cristo, cultivando líderes e membros que frutificam\nem amor, serviço e fé. Sob a liderança e visão missionária, buscamos expandir\no Reino de Deus, célula por célula, vida por vida.`;\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUserState] = useState<User | null>(null);\n  const [loadingAuth, setLoadingAuth] = useState(true); // Para saber quando o onAuthStateChange inicial concluiu\n\n  // Os dados mock permanecem para funcionalidades que ainda não usam Supabase\n  const [vidasData, setVidasData] = useState<Vida[]>(initialMockVidas);\n  const [cellGroupsData, setCellGroupsData] = useState<CellGroup[]>(initialMockCellGroups);\n  const [usersData, setUsersData] = useState<User[]>(initialMockUsers); // Pode ser usado para exibir lista de usuários, etc.\n  const [offeringsData, setOfferingsData] = useState<StoredOffering[]>(initialMockOfferings);\n  const [peaceHousesData, setPeaceHousesData] = useState<PeaceHouse[]>(initialMockPeaceHouses);\n  const [appPermissions, setAppPermissions] = useState<AppPermissions>({ liderPodeVerRelatorios: false });\n  const [geracaoVideiraConfig, setGeracaoVideiraConfigState] = useState<GeracaoVideiraConfig>({ description: defaultGeracaoVideiraDescription });\n\n  // Listener para o estado de autenticação do Supabase\n  useEffect(() => {\n    setLoadingAuth(true);\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      async (event: AuthChangeEvent, session: SupabaseSession | null) => {\n        const supabaseUser = session?.user;\n        if (supabaseUser) {\n          // TODO: Buscar perfil do usuário na tabela 'profiles' do Supabase\n          // Por agora, usaremos dados limitados do Supabase auth\n          // e tentaremos encontrar um perfil mock para simular.\n          let appUser: User = {\n            id: supabaseUser.id,\n            email: supabaseUser.email || '',\n            // Campos como name, role, isActive, cellGroupId virão da tabela 'profiles'\n            // Provisoriamente, podemos tentar encontrar no mockUsers ou deixar undefined:\n            name: supabaseUser.user_metadata?.full_name || supabaseUser.email, // Exemplo\n            role: 'lider_de_celula', // Default temporário\n            isActive: true, // Default temporário\n          };\n\n          // Tentativa de carregar dados do mock para simular um perfil completo (REMOVER QUANDO TIVER PERFIS NO SUPABASE)\n          const matchingMockUser = initialMockUsers.find(mu => mu.email.toLowerCase() === (supabaseUser.email || '').toLowerCase());\n          if (matchingMockUser) {\n            appUser = {\n              ...appUser, // Mantém ID e email do Supabase\n              name: matchingMockUser.name || appUser.name,\n              role: matchingMockUser.role || appUser.role,\n              vidaId: matchingMockUser.vidaId,\n              cellGroupId: matchingMockUser.cellGroupId,\n              cellGroupName: matchingMockUser.cellGroupName,\n              isActive: matchingMockUser.isActive !== undefined ? matchingMockUser.isActive : true,\n            };\n          }\n          \n          setUserState(appUser);\n          if (typeof window !== 'undefined') {\n            localStorage.setItem('authUser', JSON.stringify(appUser));\n          }\n        } else {\n          setUserState(null);\n          if (typeof window !== 'undefined') {\n            localStorage.removeItem('authUser');\n          }\n        }\n        setLoadingAuth(false);\n      }\n    );\n\n    // Carregar usuário do localStorage na inicialização (se Supabase ainda não respondeu)\n    // O onAuthStateChange deve prevalecer.\n    if (typeof window !== 'undefined') {\n        const storedUser = localStorage.getItem('authUser');\n        if (storedUser && !user) { // apenas se Supabase ainda não setou um usuário\n            try {\n                const parsedUser = JSON.parse(storedUser);\n                // Verificar se a sessão Supabase ainda é válida seria ideal aqui,\n                // mas onAuthStateChange deve lidar com isso.\n                setUserState(parsedUser);\n            } catch (error) {\n                console.error(\"Failed to parse authUser from localStorage\", error);\n                localStorage.removeItem('authUser');\n            }\n        }\n    }\n\n\n    return () => {\n      authListener?.unsubscribe();\n    };\n  }, []); // Roda uma vez na montagem\n\n  // Carregar outras configurações do localStorage\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const storedPermissions = localStorage.getItem('appPermissions');\n      if (storedPermissions) {\n        try {\n          setAppPermissions(JSON.parse(storedPermissions));\n        } catch (error) {\n          console.error(\"Failed to parse appPermissions from localStorage\", error);\n        }\n      }\n      const storedGeracaoConfig = localStorage.getItem('geracaoVideiraConfig');\n      if (storedGeracaoConfig) {\n        try {\n          setGeracaoVideiraConfigState(JSON.parse(storedGeracaoConfig));\n        } catch (error) {\n          console.error(\"Failed to parse geracaoVideiraConfig from localStorage\", error);\n          setGeracaoVideiraConfigState({ description: defaultGeracaoVideiraDescription });\n        }\n      }\n    }\n  }, []);\n\n\n  // Função setUser para uso interno, se necessário, mas preferir que onAuthStateChange dite o estado.\n  const setUser = useCallback((newUser: User | null) => {\n    setUserState(newUser);\n    if (typeof window !== 'undefined') {\n      if (newUser) {\n        localStorage.setItem('authUser', JSON.stringify(newUser));\n      } else {\n        localStorage.removeItem('authUser');\n      }\n    }\n  }, []);\n\n\n  const loginWithEmail = useCallback(async (email: string, password?: string): Promise<boolean> => {\n    if (!password) {\n      console.error(\"Senha é obrigatória para login com Supabase.\");\n      return false;\n    }\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email: email,\n      password: password,\n    });\n\n    if (error) {\n      console.error(\"Erro de login com Supabase:\", error.message);\n      return false;\n    }\n    \n    if (data.user) {\n      // onAuthStateChange deve cuidar de setar o usuário no estado.\n      // Aqui, precisamos buscar o perfil para verificar 'isActive'.\n      // Este é um passo ADICIONAL que faremos quando tivermos a tabela 'profiles'.\n      // Por agora, o login do Supabase é suficiente se não houver erro.\n      // A verificação 'isActive' virá da tabela de perfis.\n      // Exemplo futuro:\n      // const { data: profile, error: profileError } = await supabase\n      //   .from('profiles')\n      //   .select('isActive')\n      //   .eq('id', data.user.id)\n      //   .single();\n      // if (profileError || !profile || !profile.isActive) {\n      //   await supabase.auth.signOut(); // Desloga se perfil não encontrado ou inativo\n      //   console.warn(\"Usuário inativo ou perfil não encontrado.\");\n      //   return false;\n      // }\n      return true;\n    }\n    return false;\n  }, []);\n\n  const logout = useCallback(async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n      console.error(\"Erro ao fazer logout com Supabase:\", error.message);\n    }\n    // onAuthStateChange deve limpar o usuário do estado.\n    setUserState(null); // Limpa localmente também\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('authUser');\n    }\n  }, []);\n\n  const setGeracaoVideiraDescription = useCallback((description: string) => {\n    const newConfig = { description };\n    setGeracaoVideiraConfigState(newConfig);\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('geracaoVideiraConfig', JSON.stringify(newConfig));\n    }\n  }, []);\n\n  // Funções MOCK (manter por enquanto para partes não migradas)\n  const simulateLoginByRole = useCallback((role: Role) => {\n    let userToLogin: User | undefined;\n    if (role === 'missionario') {\n      userToLogin = usersData.find(u => u.email === 'matheus.santos01@gmail.com');\n    } else {\n      userToLogin = usersData.find(u => u.role === 'lider_de_celula' && u.vidaId === 'vida-lider-joao' && u.isActive);\n      if (!userToLogin) {\n        userToLogin = usersData.find(u => u.role === 'lider_de_celula' && u.isActive);\n      }\n    }\n    \n    if (userToLogin && userToLogin.isActive) {\n      setUser(userToLogin);\n    } else if (userToLogin && !userToLogin.isActive) {\n       console.warn(`Usuário ${userToLogin.name} (${role}) está inativo. Login não realizado.`);\n       setUser(null);\n    } else {\n      console.warn(`Nenhum usuário ativo encontrado para o papel: ${role}`);\n      setUser(null);\n    }\n  }, [usersData, setUser]);\n  \n  const updateMockVida = useCallback((updatedVida: Vida) => {\n    setVidasData(prev => prev.map(v => v.id === updatedVida.id ? updatedVida : v));\n    // Lógica de atualização de User e CellGroup associada a Vida (pode precisar de ajustes pós-Supabase)\n  }, []);\n\n  const addMockVida = useCallback((newVida: Vida) => {\n    setVidasData(prev => [{...newVida, createdAt: newVida.createdAt || new Date()}, ...prev]);\n  }, []);\n\n  const updateMockCellGroup = useCallback((updatedCG: CellGroup, oldLiderVidaId?: string) => {\n    setCellGroupsData(prevCGs => prevCGs.map(cg => cg.id === updatedCG.id ? updatedCG : cg));\n    // Lógica de atualização de User e Vida associada a CellGroup (pode precisar de ajustes)\n  }, []);\n\n  const addMockCellGroup = useCallback((newCG: CellGroup) => {\n    const cellWithDefaults = {...newCG, lastStatusUpdate: newCG.lastStatusUpdate || new Date()};\n    setCellGroupsData(prev => [cellWithDefaults, ...prev]);\n    if (newCG.liderVidaId) {\n        updateMockCellGroup(cellWithDefaults); // Esta chamada pode precisar ser revista\n    }\n  }, [updateMockCellGroup]);\n\n  const addMockUser = useCallback((newUser: User) => {\n    setUsersData(prev => {\n      const existingUserIndex = prev.findIndex(u => u.vidaId && newUser.vidaId && u.vidaId === newUser.vidaId);\n      if (existingUserIndex !== -1) {\n        const updatedUsers = [...prev];\n        updatedUsers[existingUserIndex] = {...updatedUsers[existingUserIndex], ...newUser, isActive: newUser.isActive ?? updatedUsers[existingUserIndex].isActive ?? true};\n        if (user && user.id === updatedUsers[existingUserIndex].id) {\n          setUserState(updatedUsers[existingUserIndex]); // Atualiza user se for o mesmo\n        }\n        return updatedUsers;\n      }\n      return [{...newUser, isActive: newUser.isActive ?? true}, ...prev];\n    });\n  }, [user]);\n\n  const updateMockUser = useCallback((updatedUser: User) => {\n    setUsersData(prev => prev.map(u => {\n      if (u.id === updatedUser.id) {\n        const mergedUser = {...u, ...updatedUser, isActive: updatedUser.isActive ?? u.isActive ?? true };\n        if (user && user.id === updatedUser.id) {\n          setUserState(mergedUser); // Atualiza user se for o mesmo\n        }\n        return mergedUser;\n      }\n      return u;\n    }));\n  }, [user]);\n  \n  const addMockOffering = useCallback((newOfferingData: OfferingFormValues) => {\n    const newOffering: StoredOffering = {\n      id: `off-${Date.now()}`,\n      ...newOfferingData,\n    };\n    setOfferingsData(prev => [newOffering, ...prev]);\n  }, []);\n\n  const toggleUserActiveStatus = useCallback((userIdToToggle: string) => {\n    // Esta função precisará ser adaptada para atualizar o status no Supabase\n    setUsersData(prevUsers =>\n      prevUsers.map(u => {\n        if (u.id === userIdToToggle) {\n          const newActiveStatus = u.isActive === undefined ? false : !u.isActive;\n          const updatedUserRecord = { ...u, isActive: newActiveStatus };\n          if (user && user.id === userIdToToggle) {\n            setUserState(updatedUserRecord); // Atualiza user se for o mesmo\n          }\n          return updatedUserRecord;\n        }\n        return u;\n      })\n    );\n  }, [user]);\n\n  const toggleLiderPodeVerRelatorios = useCallback(() => {\n    setAppPermissions(prev => {\n        const newPermissions = { ...prev, liderPodeVerRelatorios: !prev.liderPodeVerRelatorios };\n        if (typeof window !== 'undefined') {\n            localStorage.setItem('appPermissions', JSON.stringify(newPermissions));\n        }\n        return newPermissions;\n    });\n  }, []);\n  \n  const addMockPeaceHouse = useCallback((newPeaceHouseData: PeaceHouseFormValues) => {\n    const newPeaceHouse: PeaceHouse = {\n      id: `ph-${Date.now()}`,\n      ...newPeaceHouseData,\n      createdAt: new Date(),\n      lessonsProgress: getDefaultLessons(),\n      isCompleted: false,\n    };\n    setPeaceHousesData(prev => [newPeaceHouse, ...prev]);\n  }, []);\n\n  const updateMockPeaceHouse = useCallback((updatedPeaceHouse: PeaceHouse) => {\n    setPeaceHousesData(prev => prev.map(ph => ph.id === updatedPeaceHouse.id ? updatedPeaceHouse : ph));\n  }, []);\n\n\n  const value = useMemo(() => ({\n    user,\n    setUser,\n    loginWithEmail,\n    logout,\n    simulateLoginByRole,\n    mockUsers: usersData,\n    mockVidas: vidasData,\n    mockCellGroups: cellGroupsData,\n    mockOfferings: offeringsData,\n    mockPeaceHouses: peaceHousesData,\n    updateMockVida,\n    addMockVida,\n    updateMockCellGroup,\n    addMockCellGroup,\n    addMockUser,\n    updateMockUser,\n    addMockOffering,\n    addMockPeaceHouse,\n    updateMockPeaceHouse,\n    toggleUserActiveStatus,\n    appPermissions,\n    toggleLiderPodeVerRelatorios,\n    geracaoVideiraConfig,\n    setGeracaoVideiraDescription,\n  }), [\n    user, setUser, loginWithEmail, logout, simulateLoginByRole, \n    usersData, vidasData, cellGroupsData, offeringsData, peaceHousesData, \n    updateMockVida, addMockVida, updateMockCellGroup, addMockCellGroup, \n    addMockUser, updateMockUser, addMockOffering, addMockPeaceHouse, updateMockPeaceHouse,\n    toggleUserActiveStatus, appPermissions, toggleLiderPodeVerRelatorios,\n    geracaoVideiraConfig, setGeracaoVideiraDescription\n  ]);\n\n  if (loadingAuth && typeof window !== 'undefined' && !localStorage.getItem('authUser')) {\n    // Pode mostrar um loader global aqui se desejar, enquanto o Supabase verifica a sessão\n    // return <YourGlobalLoader />; \n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}